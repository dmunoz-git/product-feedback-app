{
    "pipes": [],
    "interfaces": [
        {
            "name": "Comment",
            "id": "interface-Comment-e4d75f42f3352b9c05c63dd6564e14b1756158aa5a7c69b5f43b0b40b6957acb7d5dc008538c2461896e3fbd71d64ab79cffd74741113007e8e105a9afdeadd6",
            "file": "src/app/core/models/comment.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Reply } from './reply.model';\nimport { User } from './user.model';\n\nexport interface Comment {\n    id?: number;\n    content: string;\n    user: User;\n    replies?: Reply[];\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "replies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Reply[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Feedback",
            "id": "interface-Feedback-7c5797a6a55fa0db125ba2a4fa776df77fabb2cc363cfb74432a92249e07ada56903365eaab85220bddcce01320f396d0d419957ae4817ff591f2361eb8e13cc",
            "file": "src/app/core/models/feedback.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Comment } from './comment.model';\n\nexport interface Feedback {\n    id?: number;\n    title: string;\n    category: string;\n    upvotes: number;\n    status: string;\n    description: string;\n    comments?: Comment[];\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Comment[]",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "upvotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Reply",
            "id": "interface-Reply-f85fa04352c29d76654fb405dec7c6ec94856b02816a23b5fe9dc3ee8b5cd5a83b62a9eae9a13dbf2e05a379045d3e32bf4616e80c6f676783313d18c280e52c",
            "file": "src/app/core/models/reply.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from './user.model';\n\nexport interface Reply {\n    content: string;\n    replyingTo: string;\n    user: User;\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "replyingTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-49d5fc9c65564f487b0f994f12db5220206ff243d19a967c05260d7f8e8e936e286de3e7d8e480eaeec468bd83cd4af017c2f8b67235d5372ef6d6d980f27885",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    image: string;\n    name: string;\n    username: string;\n}\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CommentService",
            "id": "injectable-CommentService-1b59dfebebd80943ff5b809e9126db6c85c758241a606b007b158ea4a914176f20d294b8055c0ad5a10a7b0cf450eb57460dd0e988ce0c636e347386b157987e",
            "file": "src/app/core/http/comment.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createComment",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteComment",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCommentDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateComment",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CommentService {\n\n    createComment(): Observable<null> {\n        return of(null);\n    }\n\n    getCommentDetail(): Observable<null> {\n        return of(null);\n    }\n\n    getComments(): Observable<null> {\n        return of(null);\n    }\n\n    updateComment(): Observable<null> {\n        return of(null);\n    }\n\n    deleteComment(): Observable<null> {\n        return of(null);\n    }\n}\n",
            "type": "injectable"
        },
        {
            "name": "FeedbackService",
            "id": "injectable-FeedbackService-6430d23fa3de374540ffa2cd4634b0fe0215c414110083ff1dc3ec30853ee07c9359655f55d1902e5cb05c10dee70cad9da9f8d6d7934fde1e1a0b0d1f02e097",
            "file": "src/app/core/http/feedback.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createComment",
                    "args": [
                        {
                            "name": "feedbackId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feedbackId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createFeedback",
                    "args": [
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeedback",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbackDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feedback | undefined>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbackList",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Feedback[]>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFeedback",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport data from '@core/mocks/data.json';\nimport { Feedback } from '@core/models/feedback.model';\nimport { User } from '@core/models/user.model';\nimport { BehaviorSubject, map, mergeMap, Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeedbackService {\n    constructor(private userService: UserService) {}\n\n    createFeedback(feedback: Feedback) {\n        const newFeedbackData = {\n            id: data.productRequests.length + 1,\n            title: feedback.title,\n            category: feedback.category,\n            upvotes: 0,\n            status: feedback.status,\n            description: feedback.description,\n            comments: [],\n        };\n\n        return new BehaviorSubject<boolean>(true).pipe(map(() => data.productRequests.push(newFeedbackData)));\n    }\n\n    updateFeedback(id: number, feedback: Feedback) {\n        const index = data.productRequests.findIndex((x) => x.id === id);\n        return new BehaviorSubject<boolean>(true).pipe(\n            map(() => {\n                data.productRequests[index].title = feedback.title;\n                data.productRequests[index].category = feedback.category;\n                data.productRequests[index].status = feedback.status;\n                data.productRequests[index].description = feedback.description;\n            })\n        );\n    }\n\n    deleteFeedback(id: number) {\n        const index = data.productRequests.findIndex((x) => x.id === id);\n        return new BehaviorSubject<boolean>(true).pipe(map(() => data.productRequests.splice(index, 1)));\n    }\n\n    getFeedbackDetail(id: number): Observable<Feedback | undefined> {\n        const feedback = data.productRequests.find((x) => x.id === id);\n        return new BehaviorSubject<Feedback | undefined>(feedback).asObservable();\n    }\n\n    getFeedbackList(): Observable<Feedback[]> {\n        return new BehaviorSubject<Feedback[]>(data.productRequests).asObservable();\n    }\n\n    createComment(feedbackId: number, comment: string) {\n        const index = data.productRequests.findIndex((x) => x.id === feedbackId);\n\n        return new BehaviorSubject<boolean>(true).pipe(\n            mergeMap(() => this.userService.getAuthendicatedUser()),\n            map((user: User) => {\n                if (!data.productRequests[index].comments) {\n                    data.productRequests[index].comments = [];\n                }\n\n                data.productRequests[index].comments?.push({\n                    id: data.productRequests[index].comments!.length + 1,\n                    content: comment,\n                    user,\n                });\n            })\n        );\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ReplyService",
            "id": "injectable-ReplyService-8838e65389e09ed9c0df6a8d3508f2c6f5740507dbe2362eae40eb80071ba6f22dcc171d411a3073b8010aa98d518664e1988fd0a25ec7b6b2dc7dff1d0f072a",
            "file": "src/app/core/http/reply.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createReply",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteReply",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getReplies",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getReplyDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateReply",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<undefined>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReplyService {\n\n    createReply(): Observable<null> {\n        return of(null);\n    }\n\n    getReplyDetail(): Observable<null> {\n        return of(null);\n    }\n\n    getReplies(): Observable<null> {\n        return of(null);\n    }\n\n    updateReply(): Observable<null> {\n        return of(null);\n    }\n\n    deleteReply(): Observable<null> {\n        return of(null);\n    }\n}\n",
            "type": "injectable"
        },
        {
            "name": "TranslocoHttpLoader",
            "id": "injectable-TranslocoHttpLoader-5ccb1d6465eb1b52a67b732370bfd47d524e05ce79443df804d1c0bb0c4a731098685225f6c5f9948c22acb9d91ec3969fb7b1cebee4dc5fb5a9bd120d939b26",
            "file": "src/app/transloco-root.module.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UiSelectService",
            "id": "injectable-UiSelectService-886032b1930590d2e0cbab5f8cee97410cd976c877cf96ef3533d1ca26bc48cd29b8dbe896930a106fb877d3e181e2ae83f83f7410992e6ebe7aba7ec2e8f33e",
            "file": "src/app/components/select/ui-select.service.ts",
            "properties": [
                {
                    "name": "select",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiSelectPanelComponent",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [121]
                }
            ],
            "methods": [
                {
                    "name": "getSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "UiSelectPanelComponent",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [123]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "select",
                            "type": "UiSelectPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [123],
                    "jsdoctags": [
                        {
                            "name": "select",
                            "type": "UiSelectPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { UiSelectPanelComponent } from './ui-select-panel.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSelectService {\n    private select!: UiSelectPanelComponent;\n\n    public register(select: UiSelectPanelComponent) {\n        this.select = select;\n    }\n\n    public getSelect(): UiSelectPanelComponent {\n        return this.select;\n    }\n}\n",
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-2fc3f701a7c85ec02fda5febcb2bc190d1b37ee2fba1088c2f06a32d68f422645e76ff0a6e1d8d2bf2655e7a88951ad4589895e6b2c173ab60bef61ea7eb1c0a",
            "file": "src/app/core/http/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAuthendicatedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport data from '../mocks/data.json';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    getAuthendicatedUser(): Observable<User> {\n        return new BehaviorSubject<User>(data.currentUser).asObservable();\n    }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BannerSubtitleDirective",
            "id": "directive-BannerSubtitleDirective-8be170e1d4fe83eabfdd4ce7709e2cd0f3148ad2c387d3f67b8e5b23f9053fe846eb4b8b59a0b8f4ad2f156de2ef399fae309e4cfdb6069155e7cad11b2d2ae5",
            "file": "src/app/modules/home/components/banner/banner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[app-banner-title]',\n})\nexport class BannerTitleDirective {\n    @HostBinding('class') class = 'banner__title';\n}\n\n@Directive({\n    selector: '[app-banner-subtitle]',\n})\nexport class BannerSubtitleDirective {\n    @HostBinding('class') class = 'banner__subtitle';\n}\n",
            "selector": "[app-banner-subtitle]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'banner__subtitle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'banner__subtitle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "BannerTitleDirective",
            "id": "directive-BannerTitleDirective-8be170e1d4fe83eabfdd4ce7709e2cd0f3148ad2c387d3f67b8e5b23f9053fe846eb4b8b59a0b8f4ad2f156de2ef399fae309e4cfdb6069155e7cad11b2d2ae5",
            "file": "src/app/modules/home/components/banner/banner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[app-banner-title]',\n})\nexport class BannerTitleDirective {\n    @HostBinding('class') class = 'banner__title';\n}\n\n@Directive({\n    selector: '[app-banner-subtitle]',\n})\nexport class BannerSubtitleDirective {\n    @HostBinding('class') class = 'banner__subtitle';\n}\n",
            "selector": "[app-banner-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'banner__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'banner__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "CommentAvatarDirective",
            "id": "directive-CommentAvatarDirective-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "selector": "[comment-avatar]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'comment__avatar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'comment__avatar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "CommentIdDirective",
            "id": "directive-CommentIdDirective-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "selector": "[comment-id]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "CommentNameDirective",
            "id": "directive-CommentNameDirective-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "selector": "[comment-name]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "CommentRepliesDirective",
            "id": "directive-CommentRepliesDirective-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "selector": "[comments-replies]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "CommentTextDirective",
            "id": "directive-CommentTextDirective-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "selector": "[comment-text]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "EmptyFeedbacksBodyDirective",
            "id": "directive-EmptyFeedbacksBodyDirective-2bf75979a2b97a0e56575488f0a5e35749197346a2e8d15c2954ae5a99391f98c7ec78bb31ed7317deb9e73df0bb87648ebac4701e8b780a04bc9c0ea3268ff4",
            "file": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-body]',\n})\nexport class EmptyFeedbacksBodyDirective {\n    @HostBinding('class') class = 'empty-feedbacks__body';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-title]',\n})\nexport class EmptyFeedbacksTitleDirective {\n    @HostBinding('class') class = 'empty-feedbacks__title';\n}\n",
            "selector": "[empty-feedbacks-body]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__body'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__body'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "EmptyFeedbacksTitleDirective",
            "id": "directive-EmptyFeedbacksTitleDirective-2bf75979a2b97a0e56575488f0a5e35749197346a2e8d15c2954ae5a99391f98c7ec78bb31ed7317deb9e73df0bb87648ebac4701e8b780a04bc9c0ea3268ff4",
            "file": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-body]',\n})\nexport class EmptyFeedbacksBodyDirective {\n    @HostBinding('class') class = 'empty-feedbacks__body';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-title]',\n})\nexport class EmptyFeedbacksTitleDirective {\n    @HostBinding('class') class = 'empty-feedbacks__title';\n}\n",
            "selector": "[empty-feedbacks-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardContentDirective",
            "id": "directive-FeedbackCardContentDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-content]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__content'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__content'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardFooterDirective",
            "id": "directive-FeedbackCardFooterDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-footer]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__footer'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__footer'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardSideDirective",
            "id": "directive-FeedbackCardSideDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-side]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__aside'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__aside'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardTitleDirective",
            "id": "directive-FeedbackCardTitleDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "KanbanCardTextDirective",
            "id": "directive-KanbanCardTextDirective-b34f0f72861eba4b64bfa24ef7baa9921da1b176607a78eb79bd188395da2d788ae53239b3276d3429758cfbfe39fb95125bb33c032bef343f443ed04de78f2b",
            "file": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-kanban-card',\n  templateUrl: './kanban-card.component.html',\n  styleUrls: ['./kanban-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class KanbanCardComponent  {\n  @Input() color: 'primary' | 'link' | 'tertiary' | 'none' = 'none';\n  @Input() status: string = \"status\";\n}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-title]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__title'\n  }\n})export class KanbanCardTitleDirective{}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-text]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__text'\n  }\n})export class KanbanCardTextDirective{}",
            "selector": "[kanban-card-text]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "KanbanCardTitleDirective",
            "id": "directive-KanbanCardTitleDirective-b34f0f72861eba4b64bfa24ef7baa9921da1b176607a78eb79bd188395da2d788ae53239b3276d3429758cfbfe39fb95125bb33c032bef343f443ed04de78f2b",
            "file": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-kanban-card',\n  templateUrl: './kanban-card.component.html',\n  styleUrls: ['./kanban-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class KanbanCardComponent  {\n  @Input() color: 'primary' | 'link' | 'tertiary' | 'none' = 'none';\n  @Input() status: string = \"status\";\n}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-title]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__title'\n  }\n})export class KanbanCardTitleDirective{}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-text]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__text'\n  }\n})export class KanbanCardTextDirective{}",
            "selector": "[kanban-card-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UiBadgeDirective",
            "id": "directive-UiBadgeDirective-ec59242ca21f4a7aba8ab18d6b775cc52659c41f8f03992a113ebd264871ecde257abcfc6512befa7380a0a3256e60d97457c07c6e915bf41911a77fe576db68",
            "file": "src/app/components/badge/ui-badge.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[ui-badge]',\n})\nexport class UiBadgeDirective implements OnChanges, OnDestroy {\n    @Input() value!: number;\n\n    private badgeElement: HTMLElement | null = null;\n    private regex = new RegExp(/^[0-9]\\d*$/);\n\n    constructor(@Inject(DOCUMENT) private document: Document, private elRef: ElementRef<HTMLElement>) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('value' in changes) {\n            const value = `${changes['value'].currentValue}`.trim();\n            if (value?.length > 0 && this.regex.test(value)) {\n                this.updateBadge(value);\n            } else {\n                this.updateBadge('0');\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.badgeElement) {\n            this.elRef.nativeElement.removeChild(this.badgeElement);\n            this.badgeElement.remove();\n        }\n    }\n\n    private createBadge(value: string): HTMLElement {\n        const badge = this.document.createElement('span');\n        badge.classList.add('ui-badge');\n        badge.textContent = value;\n        this.elRef.nativeElement.classList.add('ui-badge-container'); // add class to parent element\n        this.elRef.nativeElement.appendChild(badge); // add badge to parent element\n        return badge;\n    }\n\n    private updateBadge(value: string): void {\n        if (!this.badgeElement) {\n            this.badgeElement = this.createBadge(value);\n        } else {\n            this.badgeElement.textContent = value;\n        }\n    }\n}\n",
            "selector": "[ui-badge]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "badgeElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [121]
                },
                {
                    "name": "regex",
                    "defaultValue": "new RegExp(/^[0-9]\\d*$/)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [121]
                }
            ],
            "methodsClass": [
                {
                    "name": "createBadge",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLElement",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [121],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateBadge",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [121],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": ["OnChanges", "OnDestroy"],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UiButtonDirective",
            "id": "directive-UiButtonDirective-76ef230405429c5f1b7e839f0261990e64383f3849e3a17d87a9d6a59401ec6f3b2a747f02c9fdc7f2b40e3489dc03314f4207ff429ae02977c9c6f0649eaecb",
            "file": "src/app/components/button/ui-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\n\nexport type ButtonColors = 'primary' | 'secondary' | 'light' | 'dark' | 'error' | 'default';\nexport type ButtonType = 'button' | 'submit' | 'reset';\nexport type ButtonSize = 'long' | 'default';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[ui-button]',\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n    host: {\n        class: 'ui-button',\n        '[class.ui-button--primary]': 'color === \"primary\"',\n        '[class.ui-button--secondary]': 'color === \"secondary\"',\n        '[class.ui-button--dark]': 'color === \"dark\"',\n        '[class.ui-button--light]': 'color === \"light\"',\n        '[class.ui-button--error]': 'color === \"error\"',\n        '[class.ui-button--long]': 'size === \"long\"',\n    },\n})\nexport class UiButtonDirective {\n    @Input() color: ButtonColors = 'default';\n    @Input() size: ButtonSize = 'default';\n}\n",
            "selector": "[ui-button]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ButtonColors",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "ButtonSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UiInputDirective",
            "id": "directive-UiInputDirective-8708d8e125266f4837ae96028e46f36b2769c10781e757e83807ddc0e6251944b76f3a0f020d83d27695d28804259ac20cfbf25c405285880a39c52a5536cef7",
            "file": "src/app/components/input/ui-input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[uiInput]',\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n    host: {\n        class: 'ui-input',\n    },\n})\nexport class UiInputDirective {}\n",
            "selector": "[uiInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-db1822cf97cfee865d8c5662109f5709f6c1e4990ee1fc68528ac4a1a9d97b3ed4597a39b7302b98b9a302b5da326f1bfae4462f851af27f79b2f9c17ee43d39",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": ["./app.component.scss"],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: `<router-outlet></router-outlet>`,\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "BackBtnComponent",
            "id": "component-BackBtnComponent-4c84d55fe7f901696fa397c19976d4331571fabf4a783b66f436d28c935e8e2b91437b10b3181e010af1dc5a63d467100c1f63343a6788d7517eea21b6b754cd",
            "file": "src/app/modules/feedback/components/back-btn/back-btn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-back-btn",
            "styleUrls": ["./back-btn.component.scss"],
            "styles": [],
            "templateUrl": ["./back-btn.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-back-btn',\n    templateUrl: './back-btn.component.html',\n    styleUrls: ['./back-btn.component.scss'],\n})\nexport class BackBtnComponent {\n    constructor(private location: Location) {}\n\n    back() {\n        this.location.back();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.back {\n    display: flex;\n    gap: 1.2294rem;\n    color: colors.$dark-color;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n}\n",
                    "styleUrl": "./back-btn.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<span class=\"back\" (click)=\"back()\">\n    <ui-icon name=\"arrow-left\"></ui-icon>\n    <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-7e18004769c1c755a3424c1890c5483eeec4f64497ede2ebd22d292eb46c5e5644c4f05de65cec5fa6f7894b785b2eafd774f65cb171313107a63ba019c74188",
            "file": "src/app/modules/home/components/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner",
            "styleUrls": ["./banner.component.scss"],
            "styles": [],
            "templateUrl": ["./banner.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-banner',\n    templateUrl: './banner.component.html',\n    styleUrls: ['./banner.component.scss'],\n})\nexport class BannerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.banner {\n    background: url('/assets/images/suggestions/desktop/background-header.png') no-repeat center center;\n    background-size: cover;\n    padding: 1.5rem;\n    border-radius: 0.625rem;\n\n    height: 8.5625rem;\n    color: colors.$white-color;\n\n    width: 100%;\n\n    &__subtitle {\n        font-size: var(--fs-body-2);\n    }\n}\n",
                    "styleUrl": "./banner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"banner\">\n    <div class=\"banner__title\">\n        <ng-content select=\"[app-banner-title]\"></ng-content>\n    </div>\n    <div class=\"banner__subtitle\">\n        <ng-content select=\"[app-banner-subtitle]\"></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "CategoryFilterComponent",
            "id": "component-CategoryFilterComponent-9ac80d3ceefade3d2a7cb5deffa2221bb1877da070c61318f50f4f9f74f727b1c8750e913117a929a4ed7f94460bf6cc0444dda613c9827a1564d92f81bb834c",
            "file": "src/app/modules/home/components/category-filter/category-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category-filter",
            "styleUrls": ["./category-filter.component.scss"],
            "styles": [],
            "templateUrl": ["./category-filter.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "categorySelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "[\n        {\n            name: 'all',\n            selected: true,\n        },\n        {\n            name: 'ui',\n            selected: false,\n        },\n        {\n            name: 'ux',\n            selected: false,\n        },\n        {\n            name: 'enhancement',\n            selected: false,\n        },\n        {\n            name: 'bug',\n            selected: false,\n        },\n        {\n            name: 'feature',\n            selected: false,\n        },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "getCategoryActive",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCategory",
                    "args": [
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-category-filter',\n    templateUrl: './category-filter.component.html',\n    styleUrls: ['./category-filter.component.scss'],\n})\nexport class CategoryFilterComponent {\n    @Output() categorySelected = new EventEmitter<string>();\n\n    categories = [\n        {\n            name: 'all',\n            selected: true,\n        },\n        {\n            name: 'ui',\n            selected: false,\n        },\n        {\n            name: 'ux',\n            selected: false,\n        },\n        {\n            name: 'enhancement',\n            selected: false,\n        },\n        {\n            name: 'bug',\n            selected: false,\n        },\n        {\n            name: 'feature',\n            selected: false,\n        },\n    ];\n\n    setCategory(categoryName: string) {\n        this.categories.forEach((c) => (c.selected = c.name === categoryName));\n\n        this.categorySelected.emit(categoryName);\n    }\n\n    getCategoryActive(category: string) {\n        return this.categories.filter((c) => c.name === category)[0].selected;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: flex;\n    flex-wrap: wrap;\n    row-gap: 1.125rem;\n    column-gap: 0.5rem;\n    background: white;\n    padding: 1.5rem;\n\n    border-radius: 0.625rem;\n}\n",
                    "styleUrl": "./category-filter.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ui-chip-list *transloco=\"let t\" aria-label=\"Feedbacks category filter\">\n    <ui-chip *ngFor=\"let category of categories\" [active]=\"getCategoryActive(category.name)\" (click)=\"setCategory(category.name)\">{{\n        t('categories.' + category.name)\n    }}</ui-chip>\n</ui-chip-list>\n"
        },
        {
            "name": "CommentComponent",
            "id": "component-CommentComponent-cb2fad86d5758570b13832fb0d416260a7ed4cbc2ad511b59ab032a1698297661e9de2c45c34059194eccd23e82f4b5a405cbab8a5fd7fd69bc42d4b2277b3ed",
            "file": "src/app/modules/feedback/components/comment/comment.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-comment",
            "styleUrls": ["./comment.component.scss"],
            "styles": [],
            "templateUrl": ["./comment.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Directive, HostBinding, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CommentComponent {}\n\n@Directive({\n    selector: '[comment-avatar]',\n})\nexport class CommentAvatarDirective {\n    @HostBinding('class') class = 'comment__avatar';\n}\n\n@Directive({\n    selector: '[comment-name]',\n    host: {\n        class: 'comment__name',\n    },\n})\nexport class CommentNameDirective {}\n\n@Directive({\n    selector: '[comment-id]',\n    host: {\n        class: 'comment__id',\n    },\n})\nexport class CommentIdDirective {}\n\n@Directive({\n    selector: '[comment-text]',\n    host: {\n        class: 'comment__text',\n    },\n})\nexport class CommentTextDirective {}\n\n@Directive({\n    selector: '[comments-replies]',\n    host: {\n        class: 'comment__replies'\n    }\n})export class CommentRepliesDirective{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.comment {\n    display: grid;\n    grid-template-columns:  2.5rem auto;\n    grid-template-rows: 2.5rem auto;\n    align-items: flex-start;\n    row-gap: 1.0625rem;\n\n    &__name {\n        margin: 0;\n    }\n\n    &__id {\n        font-size: 0.875rem;\n        color: colors.$text-color;\n        margin: 0;\n    }\n\n    &__avatar {\n        width: min(100%, 2.5rem);\n        height: min(100%, 2.5rem);\n        border-radius: 50%;\n    }\n\n    &__text {\n        margin: 0;\n    }\n\n    &__body {\n        grid-column: 2;\n        margin-left: 2rem;\n    }\n\n    &__replies{\n       display: flex;\n       flex-direction: column;\n       gap: 2rem;\n       padding: 2rem 0;\n    }\n\n    &__header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-left: 2rem;\n    }\n}\n",
                    "styleUrl": "./comment.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"comment\">\n    <ng-content select=\"[comment-avatar]\"></ng-content>\n\n    <div class=\"comment__header\">\n        <ng-content select=\"[comment-avatar]\"></ng-content>\n            <div class=\"comment__user\">\n                <ng-content select=\"[comment-name]\"></ng-content>\n                <ng-content select=\"[comment-id]\"></ng-content>\n            </div>\n            <ng-content select=\"[comment-reply-btn]\"></ng-content>\n    </div>\n\n    <div class=\"comment__body\">\n        <ng-content select=\"[comment-text]\"></ng-content>\n        <ng-content class=\"[comment-replies]\"></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "CommentFormComponent",
            "id": "component-CommentFormComponent-1d6d9d0b6e30d06dcf65dc81c6bd5548602a242343ef6245c560fc3e3fe68f341ab3c18cbde88149fabdd91262f6b3e783cfbaddd46bf00b9c9448ffbe940aab",
            "file": "src/app/modules/feedback/components/comment-form/comment-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-comment-form",
            "styleUrls": ["./comment-form.component.scss"],
            "styles": [],
            "templateUrl": ["./comment-form.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonLabel",
                    "defaultValue": "'Add comment'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "charCounterLabel",
                    "defaultValue": "'characters left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "sectionLabel",
                    "defaultValue": "'New comment'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "comment",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "new FormControl({ value: '', disabled: false })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendComment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-comment-form',\n    templateUrl: './comment-form.component.html',\n    styleUrls: ['./comment-form.component.scss'],\n})\nexport class CommentFormComponent implements OnInit {\n    @Input() maxLength: number = 0; //Whitout limit\n    @Input() sectionLabel: string = 'New comment';\n    @Input() charCounterLabel: string = 'characters left';\n    @Input() buttonLabel: string = 'Add comment';\n    @Output() comment: EventEmitter<string> = new EventEmitter<string>();\n\n    text: FormControl = new FormControl({ value: '', disabled: false });\n\n    ngOnInit(): void {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.maxLength === 0 ? this.text.addValidators([Validators.minLength(1)]) : this.text.addValidators([Validators.maxLength(this.maxLength), Validators.minLength(1)]);\n    }\n\n    get textLength() {\n        return this.text.value.length;\n    }\n\n    sendComment() {\n        if (this.text.valid) {\n            this.comment.emit(this.text.value);\n            this.text.setValue('');\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.comment-form {\n    background: white;\n    border-radius: 0.625rem;\n    padding: 1.5rem 2.125rem;\n    margin-top: 1.5rem;\n    margin-bottom: 1.5625rem;\n    \n    &__footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    &__textarea {\n        resize: none;\n        max-height: 5rem;\n    }\n\n    &--error {\n        color: colors.$outline-error-color;\n    }\n}\n",
                    "styleUrl": "./comment-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": ["OnInit"],
            "accessors": {
                "textLength": {
                    "name": "textLength",
                    "getSignature": {
                        "name": "textLength",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            },
            "templateData": "<section class=\"section comment-form\">\n    <h3 class=\"comment-form__title\">{{ sectionLabel }}</h3>\n    <textarea uiInput #input [formControl]=\"text\" class=\"comment-form__textarea\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n    <div class=\"comment-form__footer\">\n        <p class=\"comment-form___counter\" [class.comment-form--error]=\"maxLength - input.value!.length < 0\">\n            {{ maxLength - (input.value?.length || 0) }} {{ charCounterLabel }}\n        </p>\n        <button ui-button color=\"primary\" class=\"comment-form__button\" (click)=\"sendComment()\">{{ buttonLabel }}</button>\n    </div>\n</section>\n"
        },
        {
            "name": "EmptyFeedbacksComponent",
            "id": "component-EmptyFeedbacksComponent-057a08c06a521da201a1ffdaf56ad6c06bfffedf50033535d89462c9cba678ab12918c620c800ce4af999cdcb77bd6b3ebf9740920551e5f00d024ea351c3a77",
            "file": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.component.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-feedbacks",
            "styleUrls": ["./empty-feedbacks.component.scss"],
            "styles": [],
            "templateUrl": ["./empty-feedbacks.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-empty-feedbacks',\n    templateUrl: './empty-feedbacks.component.html',\n    styleUrls: ['./empty-feedbacks.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class EmptyFeedbacksComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".empty-feedbacks {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 37.5rem;\n\n    background: white;\n    border-radius: 0.625rem;\n\n    &__image {\n        min-height: 8.5463rem;\n        min-width: auto;\n    }\n    &__title {\n        margin: 3.3287rem 0 0 0;\n    }\n\n    &__body {\n        margin: 1rem 0 3rem 0;\n        text-align: center;\n        max-width: 45ch;\n    }\n}\n",
                    "styleUrl": "./empty-feedbacks.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"empty-feedbacks\">\n    <img src=\"/assets/images/suggestions/illustration-empty.svg\" alt=\"There is not feedbacks\" class=\"empty-feedbacks__image\" />\n    <ng-content select=\"[empty-feedbacks-title]\"></ng-content>\n    <ng-content select=\"[empty-feedbacks-body]\"></ng-content>\n    <ng-content select=\"[empty-feedbacks-button]\"></ng-content>\n</div>\n"
        },
        {
            "name": "FeedbackCardComponent",
            "id": "component-FeedbackCardComponent-49f69f245cb6108770e4eab831f2974f16d4b4fc3d2786ef2241f6f4385e25695aebef7b631c92c560f71b48f6f16db233bdbcef4dadae9f6d8f7b133151b8b8",
            "file": "src/app/components/feedback-card/feedback-card.component.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-card",
            "styleUrls": ["./feedback-card.component.scss"],
            "styles": [],
            "templateUrl": ["./feedback-card.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-feedback-card',\n    templateUrl: './feedback-card.component.html',\n    styleUrls: ['./feedback-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FeedbackCardComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n@use 'tools/media';\n\n$class: 'feedback-card';\n\n:host {\n    display: block;\n}\n\n.#{$class} {\n    display: flex;\n    align-items: flex-start;\n    background-color: colors.$white-color;\n    border-radius: 0.625rem;\n    padding: 1.75rem 2rem;\n    gap: 2.25rem;\n\n    @include media.mobile {\n        flex-direction: column;\n        gap: 1rem;\n    }\n\n    &__title {\n        margin-top: 0;\n    }\n\n    &__body {\n        width: 100%;\n    }\n\n    &__content {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        gap: 1rem;\n    }\n\n    &__title {\n        margin-bottom: 0.25rem;\n    }\n\n    &__text {\n        margin-top: 0;\n        margin-bottom: 1rem;\n    }\n\n    &__side {\n        @include media.mobile {\n            order: 1;\n            width: 100%;\n        }\n    }\n}\n",
                    "styleUrl": "./feedback-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"feedback-card\">\n    <div class=\"feedback-card__side\">\n        <ng-content select=\"[feedback-card-aside]\"></ng-content>\n    </div>\n    <article class=\"feedback-card__body\">\n        <div class=\"feedback-card__title\">\n            <ng-content select=\"[feedback-card-title]\"></ng-content>\n        </div>\n\n        <div class=\"feedback-card__content\">\n            <ng-content select=\"[feedback-card-content]\"></ng-content>\n        </div>\n\n        <div class=\"feedback-card__footer\">\n            <ng-content select=\"[feedback-card-footer]\"></ng-content>\n        </div>\n    </article>\n</div>\n"
        },
        {
            "name": "FeedbackDetailComponent",
            "id": "component-FeedbackDetailComponent-0146a2e331a9d8f526f912a34c32b92b7f0dcfa1c5c8f8f4526b1df746fdeb2827e538047a29e5c2fa800edd1b64b016ab482a82063c5f8e2cd87dfcc7b6c4ae",
            "file": "src/app/modules/feedback/layouts/feedback-detail/feedback-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-detail",
            "styleUrls": ["./feedback-detail.component.scss"],
            "styles": [],
            "templateUrl": ["./feedback-detail.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "feedback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Feedback",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createComment",
                    "args": [
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FeedbackService } from '@core/http/feedback.service';\nimport { Feedback } from '@core/models/feedback.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-feedback-detail',\n    templateUrl: './feedback-detail.component.html',\n    styleUrls: ['./feedback-detail.component.scss'],\n})\nexport class FeedbackDetailComponent implements OnInit, OnDestroy {\n    subscription: Subscription = new Subscription();\n    id: number = 0;\n    feedback!: Feedback;\n\n\n    constructor(private readonly feedbackService: FeedbackService, private route: ActivatedRoute) {}\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.id = Number(this.route.snapshot.paramMap.get('id'));\n\n        this.subscription.add(\n            this.feedbackService.getFeedbackDetail(this.id).subscribe((feedback) => {\n                this.feedback = feedback as Feedback;\n            })\n        );\n    }\n\n    createComment(comment: string) {\n        this.subscription.add(this.feedbackService.createComment(this.id, comment).subscribe(() => {}));\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.layout {\n    margin: 3.9375rem auto 0 auto;\n    padding: 5.875rem 1.5rem 0 1.5rem;\n    width: min(53.625rem, 100%);\n}\n\n.toolbar {\n    margin-bottom: 0.625rem;\n}\n\n.section {\n    background: white;\n    border-radius: 0.625rem;\n    padding: 1.5rem 2.125rem;\n    margin-top: 1.5rem;\n}\n\n.comment-form {\n    background: white;\n    border-radius: 0.625rem;\n    padding: 1.5rem 2.125rem;\n    margin-top: 1.5rem;\n    margin-bottom: 8.5625rem;\n\n    &__footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    &__textarea {\n        resize: none;\n        max-height: 5rem;\n    }\n}\n\n.divider {\n    width: 100%;\n    height: 1px;\n    color: colors.$text-color;\n    margin: 2rem 0;\n}\n",
                    "styleUrl": "./feedback-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": ["OnInit", "OnDestroy"],
            "templateData": "<section class=\"layout\">\n    <ui-toolbar class=\"toolbar\" justify=\"between\" background=\"transparent\">\n        <app-back-btn>Go Back</app-back-btn>\n        <button ui-button color=\"secondary\" routerLink=\"/feedback/edit/{{ feedback.id }}\" data-cy=\"edit\">Edit Feedback</button>\n    </ui-toolbar>\n    <app-feedback-card>\n        <ui-counter feedback-card-aside class=\"hide-mobile\" [limitClicksTo]=\"1\" [value]=\"feedback.upvotes\"></ui-counter>\n        <ng-container feedback-card-aside>\n            <section class=\"show-only-mobile\">\n                <div class=\"feedback-aside-mobile\">\n                    <ui-counter order=\"row\" [limitClicksTo]=\"1\" [value]=\"feedback.upvotes\"></ui-counter>\n                    <ui-icon name=\"comments\" ui-badge></ui-icon>\n                </div>\n            </section>\n        </ng-container>\n        <h3 feedback-card-title data-cy=\"title\">{{ feedback.title }}</h3>\n        <div feedback-card-content>\n            <p class=\"text\" data-cy=\"description\">{{ feedback.description }}</p>\n            <ui-icon class=\"hide-mobile\" name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n        </div>\n        <ui-chip feedback-card-footer [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n    </app-feedback-card>\n    <section class=\"section\" *ngIf=\"feedback.comments\">\n        <div *ngFor=\"let comment of feedback.comments; let i = index\">\n            <app-comment>\n                <img src=\"{{ comment.user.image }}\" alt=\"{{ comment.user.name }}\" comment-avatar />\n                <h4 comment-name>{{ comment.user.name | titlecase }}</h4>\n                <button ui-button comment-reply-btn color=\"light\">Reply</button>\n                <span comment-id>@{{ comment.user.username }}</span>\n                <p comment-text>{{ comment.content }}</p>\n                <div comments-replies *ngIf=\"comment.replies?.length! > 0\">\n                    <app-comment *ngFor=\"let reply of comment.replies\">\n                        <img comment-avatar src=\"{{ reply.user.image }}\" alt=\"{{ reply.user.name }}\"  />\n                        <h4 comment-name>{{ reply.user.name | titlecase }}</h4>\n                        <button ui-button comment-reply-btn color=\"light\">Reply</button>\n                        <span comment-id>@{{ reply.user.username }}</span>\n                        <p comment-text><span class=\"text-primary\">@{{ comment.user.username }}</span> {{ reply.content }}</p>\n                    </app-comment>\n                </div>\n            </app-comment>\n            <ui-divider *ngIf=\"i < feedback.comments!.length - 1\"></ui-divider>\n        </div>\n    </section>\n    <app-comment-form [maxLength]=\"225\" (comment)=\"createComment($event)\"></app-comment-form>\n</section>\n"
        },
        {
            "name": "FeedbackFormComponent",
            "id": "component-FeedbackFormComponent-7c66e2c64989b74a4948a3123f211fdf122b9873d0dcc321368e02f8e8be739d5e50aa31b29dd90f741702a90071647365f24f3a74b824b4e9dc34cf9638515d",
            "file": "src/app/modules/feedback/layouts/feedback-form/feedback-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-form",
            "styleUrls": ["./feedback-form.component.scss"],
            "styles": [],
            "templateUrl": ["./feedback-form.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "['feature', 'bug', 'enhancement', 'ui', 'ux']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [123, 144]
                },
                {
                    "name": "feedbackForm",
                    "defaultValue": "this.fb.group({\n        title: ['', Validators.required],\n        category: [this.categories[0], Validators.required],\n        description: ['', Validators.required],\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [123]
                },
                {
                    "name": "feedbackId",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [121]
                },
                {
                    "name": "statusControl",
                    "defaultValue": "this.fb.control('', [Validators.required])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [123]
                },
                {
                    "name": "statuses",
                    "defaultValue": "['planned', 'inProgress', 'live', 'suggestion', 'closed']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [123, 144]
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [121]
                },
                {
                    "name": "update",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [123]
                }
            ],
            "methodsClass": [
                {
                    "name": "createFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFeedback",
                    "args": [
                        {
                            "name": "feedbackId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feedbackId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FeedbackService } from '@core/http/feedback.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-feedback-form',\n    templateUrl: './feedback-form.component.html',\n    styleUrls: ['./feedback-form.component.scss'],\n})\nexport class FeedbackFormComponent implements OnInit, OnDestroy {\n    public readonly categories = ['feature', 'bug', 'enhancement', 'ui', 'ux'];\n    public readonly statuses = ['planned', 'inProgress', 'live', 'suggestion', 'closed'];\n    public update: boolean = false;\n    public statusControl = this.fb.control('', [Validators.required]);\n\n    public feedbackForm = this.fb.group({\n        title: ['', Validators.required],\n        category: [this.categories[0], Validators.required],\n        description: ['', Validators.required],\n    });\n\n    private feedbackId: number = -1;\n    private subscription: Subscription = new Subscription();\n\n    constructor(private fb: FormBuilder, private feedbacks: FeedbackService, private router: Router, private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        if (this.route.snapshot.paramMap.get('id')) {\n            this.feedbackId = Number(this.route.snapshot.paramMap.get('id'));\n\n            this.getFeedback(this.feedbackId);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    get title(): AbstractControl | null {\n        return this.feedbackForm.get('title');\n    }\n\n    get category(): AbstractControl | null {\n        return this.feedbackForm.get('category');\n    }\n\n    get description(): AbstractControl | null {\n        return this.feedbackForm.get('description');\n    }\n\n    createFeedback() {\n        this.subscription.add(this.feedbacks.createFeedback(this.feedbackForm.value).subscribe(() => this.router.navigate(['/'])));\n    }\n\n    getFeedback(feedbackId: number) {\n        this.subscription.add(\n            this.feedbacks.getFeedbackDetail(feedbackId).subscribe((feedback) => {\n                if (feedback) {\n                    this.update = true;\n                    this.feedbackForm.patchValue({\n                        title: feedback.title,\n                        category: feedback.category,\n                        description: feedback.description,\n                    });\n\n                    this.statusControl.setValue(feedback.status);\n                } else {\n                    this.router.navigate(['/']);\n                }\n            })\n        );\n    }\n\n    updateFeedback() {\n        const feedback = this.feedbackForm.value;\n        feedback.status = this.statusControl.value;\n        this.subscription.add(this.feedbacks.updateFeedback(this.feedbackId, feedback).subscribe(() => this.router.navigate(['/'])));\n    }\n\n    deleteFeedback() {\n        this.subscription.add(this.feedbacks.deleteFeedback(this.feedbackId).subscribe(() => this.router.navigate(['/'])));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".feedback-create {\n    width: 33.75rem;\n    margin: 5.75rem auto 1rem auto;\n    padding: 0 1.5rem;\n\n    &__card {\n        margin-top: 4.25rem;\n    }\n}\n\n.form-field-title {\n    margin: 0.125rem 0;\n}\n\n.form-buttons {\n    display: flex;\n    justify-content: flex-end;\n    flex-wrap: wrap;\n\n    &__action:not(:last-child) {\n        margin-right: 1rem;\n    }\n\n    &__delete {\n        margin-right: auto;\n    }\n}\n",
                    "styleUrl": "./feedback-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": ["OnInit", "OnDestroy"],
            "accessors": {
                "title": {
                    "name": "title",
                    "getSignature": {
                        "name": "title",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 41
                    }
                },
                "category": {
                    "name": "category",
                    "getSignature": {
                        "name": "category",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 45
                    }
                },
                "description": {
                    "name": "description",
                    "getSignature": {
                        "name": "description",
                        "type": "",
                        "returnType": "AbstractControl | null",
                        "line": 49
                    }
                }
            },
            "templateData": "<section class=\"feedback-create\" *transloco=\"let t\">\n    <app-back-btn data-cy=\"back\">{{ t('back') }}</app-back-btn>\n    <app-form-card\n        class=\"feedback-create__card\"\n        [iconPath]=\"update ? '/assets/images/icons/icon-edit-feedback.svg' : '/assets/images/icons/icon-new-feedback.svg'\"\n    >\n        <form [formGroup]=\"feedbackForm\" (ngSubmit)=\"createFeedback()\">\n            <h1 *ngIf=\"!update\">{{ t('newFeedback') }}</h1>\n            <h1 *ngIf=\"update\">Editing \"{{ title?.value }}\"</h1>\n\n            <h4 class=\"form-field-title\">{{ t('formFields.title') }}</h4>\n            <ui-form-field size=\"fluent\">\n                <ui-label>{{ t('formFields.titleLabel') }}</ui-label>\n                <input uiInput type=\"text\" formControlName=\"title\" data-cy=\"title-field\" />\n                <ui-error *ngIf=\"title?.errors && title?.hasError('required') && title?.touched\" data-cy=\"field-error\">\n                    {{ t('errors.empty') }}\n                </ui-error>\n            </ui-form-field>\n\n            <h4 class=\"form-field-title\">{{ t('formFields.category') }}</h4>\n            <ui-form-field size=\"fluent\">\n                <ui-label>{{ t('formFields.categoryLabel') }}</ui-label>\n                <ui-select formControlName=\"category\">\n                    <ui-select-option *ngFor=\"let category of categories\" value=\"{{ category }}\">{{\n                        t('categories.' + category)\n                    }}</ui-select-option>\n                </ui-select>\n            </ui-form-field>\n\n            <h4 class=\"form-field-title\" *ngIf=\"update\">Update status</h4>\n            <ui-form-field size=\"fluent\" *ngIf=\"update\">\n                <ui-label>{{ t('formFields.statusLabel') }}</ui-label>\n                <ui-select [formControl]=\"statusControl\">\n                    <ui-select-option *ngFor=\"let status of statuses\" value=\"{{ status }}\">{{ t('status.' + status) }}</ui-select-option>\n                </ui-select>\n            </ui-form-field>\n\n            <h4 class=\"form-field-title\">{{ t('formFields.detail') }}</h4>\n            <ui-form-field size=\"fluent\">\n                <ui-label>{{ t('formFields.detailLabel') }}</ui-label>\n                <textarea uiInput formControlName=\"description\" rows=\"4\" data-cy=\"description-field\"></textarea>\n                <ui-error *ngIf=\"description?.errors && description?.hasError('required') && description?.touched\" data-cy=\"field-error\">\n                    {{ t('errors.empty') }}\n                </ui-error>\n            </ui-form-field>\n\n            <div class=\"form-buttons\">\n                <button\n                    ui-button\n                    color=\"error\"\n                    type=\"button\"\n                    class=\"form-buttons__delete\"\n                    *ngIf=\"update\"\n                    (click)=\"deleteFeedback()\"\n                    data-cy=\"delete\"\n                >\n                    Delete\n                </button>\n                <button ui-button color=\"dark\" type=\"button\" class=\"form-buttons__action\" [routerLink]=\"['/']\" data-cy=\"cancel\">\n                    {{ t('buttons.cancel') }}\n                </button>\n                <button\n                    *ngIf=\"update\"\n                    ui-button\n                    color=\"primary\"\n                    type=\"button\"\n                    class=\"form-buttons__action\"\n                    [disabled]=\"feedbackForm.invalid\"\n                    (click)=\"updateFeedback()\"\n                    data-cy=\"edit\"\n                >\n                    {{ t('buttons.addFeedbacks') }}\n                </button>\n                <button\n                    *ngIf=\"!update\"\n                    ui-button\n                    color=\"primary\"\n                    type=\"submit\"\n                    class=\"form-buttons__action\"\n                    [disabled]=\"feedbackForm.invalid\"\n                    data-cy=\"submit\"\n                >\n                    {{ t('buttons.addFeedbacks') }}\n                </button>\n            </div>\n        </form>\n    </app-form-card>\n</section>\n"
        },
        {
            "name": "FormCardComponent",
            "id": "component-FormCardComponent-91536a0bc4046dc357956b0b7f33f8dcf9f5840206d0d0e106c85e2005cdbce2a7fd860bbf8f30a95c2f3376f84c394f844b0024fb6b9552dffd5842ebfe98ff",
            "file": "src/app/modules/feedback/components/form-card/form-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-card",
            "styleUrls": ["./form-card.component.scss"],
            "styles": [],
            "templateUrl": ["./form-card.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "altText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-form-card',\n    templateUrl: './form-card.component.html',\n    styleUrls: ['./form-card.component.scss'],\n})\nexport class FormCardComponent {\n    @Input() iconPath: string = '';\n    @Input() altText: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n}\n\n.form-card {\n    position: relative;\n    background: white;\n    padding: 3.25rem 2.625rem 2.5rem 2.625rem;\n    border-radius: 0.625rem;\n\n    &__icon {\n        position: absolute;\n        top: -1.75rem;\n        width: 3.5rem;\n        height: 3.5rem;\n    }\n}\n",
                    "styleUrl": "./form-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"form-card\">\n    <img class=\"form-card__icon\" src=\"{{ iconPath }}\" alt=\"{{ altText }}\" />\n    <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-5dff32d96f71a1d0817cfd711ac2d7f47453f8769ebbd03d3c8a798bb69f3f3e56b3a57640860643516c144465e152f0dd345209f5f9deaf78a1b53aa3c36098",
            "file": "src/app/modules/home/layout/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": ["./home.component.scss"],
            "styles": [],
            "templateUrl": ["./home.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "category",
                    "defaultValue": "'all'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "feedbacks$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Feedback[]>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "feebacksByStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterFeedbacks",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbacksFiltered",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feedback[]>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [121],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FeedbackService } from '@core/http/feedback.service';\nimport { Feedback } from '@core/models/feedback.model';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n    feedbacks$!: Observable<Feedback[]>;\n    category:string = 'all';\n\n    constructor(private feedbacks: FeedbackService, private router: Router) {\n        this.feedbacks$ = feedbacks.getFeedbackList();\n    }\n\n    ngOnInit(): void {\n        this.feedbacks$ = this.feedbacks.getFeedbackList();\n    }\n\n    filterFeedbacks(category: string) {\n        this.category = category;\n        this.feedbacks$ = category !== 'all' ? this.getFeedbacksFiltered(category) : this.feedbacks.getFeedbackList();\n    }\n\n    feebacksByStatus(status: string) {\n        return this.feedbacks$.pipe(map(feedbacks => feedbacks.filter(feedback => feedback.status === status)));\n    }\n\n    private getFeedbacksFiltered(category: string): Observable<Feedback[]> {\n        return this.feedbacks\n            .getFeedbackList()\n            .pipe(map((feedbacks: Feedback[]) => feedbacks.filter((feedback: Feedback) => feedback.category === category)));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'tools/mixins';\n@use 'settings/layout';\n\n// Layout\n.layout {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1.875rem;\n    padding: 5.875rem 1.5rem 8.0625rem 1.5rem;\n    width: min(100%, layout.$min-container-width);\n    margin: 0 auto;\n    .main {\n        flex: 1;\n        flex-grow: 315;\n    }\n\n    .aside {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n        flex-basis: 15.9375rem;\n        flex-grow: 1;\n    }\n}\n\n.pointer {\n    cursor: pointer;\n}\n\n// Feedback card margins\n.feedback-list {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n// Feedback aside mobile\n.feedback-aside-mobile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n// Toolbar classes\n.toolbar {\n    margin-bottom: 1.5rem;\n\n    &__header {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": ["OnInit"],
            "templateData": "<div *transloco=\"let t\" class=\"layout\">\n    <aside class=\"aside\">\n        <app-banner>\n            <h2 app-banner-title class=\"text-white\">{{ t('title') }}</h2>\n            <span app-banner-subtitle>{{ t('subtitle') }}</span>\n        </app-banner>\n        <app-category-filter (categorySelected)=\"filterFeedbacks($event)\"></app-category-filter>\n        <app-roadmap linkLabel=\"View\" title=\"Roadmap\" [redirectPath]=\"'/roadmap/' + category\" [disabled]=\"((feebacksByStatus('planned') | async)!.length + (feebacksByStatus('in-progress') | async)!.length + (feebacksByStatus('live') | async)!.length) === 0\">\n            <app-roadmap-item color=\"primary\" [amound]=\"(feebacksByStatus('planned') | async)!.length\">Planned</app-roadmap-item>\n            <app-roadmap-item color=\"tertiary\" [amound]=\"(feebacksByStatus('in-progress') | async)!.length\">In-Progress</app-roadmap-item>\n            <app-roadmap-item color=\"link\" [amound]=\"(feebacksByStatus('live') | async)!.length\">Lived</app-roadmap-item>\n        </app-roadmap>\n    </aside>\n    <main class=\"main\">\n        <ui-toolbar class=\"toolbar\" justify=\"between\">\n            <div class=\"toolbar__header\">\n                <img src=\"/assets/images/suggestions/icon-suggestions.svg\" alt=\"\" />\n                <h3 class=\"text-white\">{{ (feedbacks$ | async)?.length }} {{ t('toolbarTitle') }}</h3>\n            </div>\n            <button ui-button color=\"primary\" routerLink=\"/feedback/new\">\n                <ui-icon name=\"plus\"></ui-icon> {{ t('createFeedbackLabelButton') }}\n            </button>\n        </ui-toolbar>\n        <section class=\"feedback-list\" *ngIf=\"(feedbacks$ | async)!.length > 0\" data-cy=\"feedback-list\">\n            <app-feedback-card class=\"pointer\" *ngFor=\"let feedback of feedbacks$ | async\" routerLink=\"/feedback/detail/{{ feedback.id }}\">\n                <ui-counter feedback-card-aside class=\"hide-mobile\" [limitClicksTo]=\"1\" [value]=\"feedback.upvotes\"></ui-counter>\n                <ng-container feedback-card-aside>\n                    <section class=\"show-only-mobile\">\n                        <div class=\"feedback-aside-mobile\">\n                            <ui-counter order=\"row\" [limitClicksTo]=\"1\" [value]=\"feedback.upvotes\"></ui-counter>\n                            <ui-icon name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n                        </div>\n                    </section>\n                </ng-container>\n                <h3 feedback-card-title>{{ feedback.title }}</h3>\n                <div feedback-card-content>\n                    <p class=\"text\">{{ feedback.description }}</p>\n                    <ui-icon\n                        class=\"hide-mobile\"\n                        name=\"comments\"\n                        ui-badge\n                        [value]=\"feedback.comments ? feedback.comments.length : 0\"\n                    ></ui-icon>\n                </div>\n                <ui-chip feedback-card-footer [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n            </app-feedback-card>\n        </section>\n        <app-empty-feedbacks *ngIf=\"(feedbacks$ | async)!.length === 0\">\n            <h1 empty-feedbacks-title>{{ t('emptyFeedbackList.title') }}</h1>\n            <p empty-feedbacks-body>{{ t('emptyFeedbackList.description') }}</p>\n            <button ui-button color=\"primary\" empty-feedbacks-button routerLink=\"/feedback/new\">\n                <ui-icon name=\"plus\"></ui-icon> {{ t('createFeedbackLabelButton') }}\n            </button>\n        </app-empty-feedbacks>\n    </main>\n</div>\n"
        },
        {
            "name": "KanbanBoardComponent",
            "id": "component-KanbanBoardComponent-8ed13c0c27a866778ab288ee5b360eff51c20afee6c568a1f41aed63a8c32a019b45f5e7845c0c4e57cbb927beabf69b350759b5aa4cf45156e191313dd315df",
            "file": "src/app/modules/roadmap/components/kanban-board/kanban-board.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-kanban-board",
            "styleUrls": ["./kanban-board.component.scss"],
            "styles": [],
            "templateUrl": ["./kanban-board.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-kanban-board',\n  templateUrl: './kanban-board.component.html',\n  styleUrls: ['./kanban-board.component.scss']\n})\nexport class KanbanBoardComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".kanban-board {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(13.9375rem, 1fr));\n    column-gap: 1.875rem;\n}",
                    "styleUrl": "./kanban-board.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"kanban-board\">\n    <ng-content></ng-content>\n</section>"
        },
        {
            "name": "KanbanCardComponent",
            "id": "component-KanbanCardComponent-b34f0f72861eba4b64bfa24ef7baa9921da1b176607a78eb79bd188395da2d788ae53239b3276d3429758cfbfe39fb95125bb33c032bef343f443ed04de78f2b",
            "file": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-kanban-card",
            "styleUrls": ["./kanban-card.component.scss"],
            "styles": [],
            "templateUrl": ["./kanban-card.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"link\" | \"tertiary\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "\"status\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-kanban-card',\n  templateUrl: './kanban-card.component.html',\n  styleUrls: ['./kanban-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class KanbanCardComponent  {\n  @Input() color: 'primary' | 'link' | 'tertiary' | 'none' = 'none';\n  @Input() status: string = \"status\";\n}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-title]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__title'\n  }\n})export class KanbanCardTitleDirective{}\n\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector:'[kanban-card-text]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class:'kanban-card__text'\n  }\n})export class KanbanCardTextDirective{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"settings/colors\";\n\n$colors: (\n    'primary': colors.$primary-color,\n    'link': colors.$link-hover-color,\n    'tertiary': colors.$tertiary-color,\n);\n\n:host {\n    display: block;\n    max-width: 21.875rem;\n}\n\n.kanban-card {\n    background: white;\n    padding: 2rem;\n\n    border-top: 0.375rem solid;\n    border-radius: 0.3125rem;\n\n    \n    &--primary{\n        border-top: 0.375rem solid map-get($colors, 'primary');\n    }\n\n    &--link{\n        border-top: 0.375rem solid map-get($colors, 'link');\n    }\n\n    &--tertiary{\n        border-top: 0.375rem solid map-get($colors, 'tertiary');\n    }\n    \n\n    &__title {\n        margin: 0.5rem 0 0.25rem 0;\n    }\n\n    &__text {\n        margin: 0;\n    }\n\n    &__status {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n\n    &__status::before{\n        content: '';\n        display: block;\n        width: 8px;\n        height: 8px;\n        background: colors.$text-color;\n        border-radius: 50%;\n    }\n\n    &__status--primary::before{\n        background: map-get($colors, 'primary');\n    }\n\n    &__status--link::before{\n        background: map-get($colors, 'link');\n    }\n\n    &__status--tertiary::before{\n        background: map-get($colors, 'tertiary');\n    }\n}",
                    "styleUrl": "./kanban-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"kanban-card\" [ngClass]=\"'kanban-card--' + color\">\n    <span class=\"kanban-card__status\" [ngClass]=\"'kanban-card__status--' + color\">{{status}}</span>\n    <ng-content select=\"[kanban-card-title]\"></ng-content>\n    <div class=\"kanban-card__body\">\n        <ng-content select=\"[kanban-card-text]\"></ng-content>\n        <ng-content></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "KanbanColumnComponent",
            "id": "component-KanbanColumnComponent-65b721a43997e770cecddb6f6545b66aa7f650a37cf5241bd125e357ba27296d1c3706d89cd927fb88e79b3b31e4938bfe7f8bb49eeee9d7094cccf942d5732b",
            "file": "src/app/modules/roadmap/components/kanban-column/kanban-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-kanban-column",
            "styleUrls": ["./kanban-column.component.scss"],
            "styles": [],
            "templateUrl": ["./kanban-column.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "subtitle",
                    "defaultValue": "\"subtitle\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Title\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-kanban-column',\n  templateUrl: './kanban-column.component.html',\n  styleUrls: ['./kanban-column.component.scss']\n})\nexport class KanbanColumnComponent {\n  @Input() title:string = \"Title\";\n  @Input() subtitle: string = \"subtitle\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n}\n\n.kanban-column {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n\n    &__row{\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n    }\n}",
                    "styleUrl": "./kanban-column.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"kanban-column\">\n    <div class=\"kanban-column__header\">\n        <h3 class=\"kanban-column__title\">{{title}}</h3>\n        <span class=\"kanban-column__subtitle\">{{subtitle}}</span>\n    </div>\n    <div class=\"kanban-column__row\">\n        <ng-content></ng-content>\n    </div>\n</section>"
        },
        {
            "name": "ReplyComponent",
            "id": "component-ReplyComponent-e93e872a35c6a576faf571625838d01c7381985c6970499a564a00660df418a05bf2c037944943120ace8bb42e6d6d9aaab6c6557c1e281ca58af03836f80f24",
            "file": "src/app/modules/feedback/components/reply/reply.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reply",
            "styleUrls": ["./reply.component.scss"],
            "styles": [],
            "templateUrl": ["./reply.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "maxLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "postBtnLabel",
                    "defaultValue": "\"Post\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "post",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "new FormControl({value:'', disabled: false})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "postReply",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reply',\n  templateUrl: './reply.component.html',\n  styleUrls: ['./reply.component.scss']\n})\nexport class ReplyComponent implements OnInit {\n  @Input() postBtnLabel: string = \"Post\"\n  @Input() placeholder: string = \"\";\n  @Input() maxLength: number = 0; //Without Limit\n  @Output() post: EventEmitter<string> = new EventEmitter<string>();\n\n  text: FormControl = new FormControl({value:'', disabled: false});\n\n  ngOnInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.maxLength === 0 ? this.text.addValidators([Validators.minLength(1)]) : this.text.addValidators([Validators.maxLength(this.maxLength), Validators.minLength(1)]);\n  }\n\n  postReply() {\n    if (this.text.valid) {\n        this.post.emit(this.text.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n}\n\n.reply {\n    display: flex;\n    align-items: flex-start;\n    gap: 1rem;\n\n    &__text {\n        margin: 0;\n        min-height: 5rem;\n        resize: none;\n    }\n\n    &__button{\n        min-width: 7.3125rem;\n    }\n}",
                    "styleUrl": "./reply.component.scss"
                }
            ],
            "stylesData": "",
            "implements": ["OnInit"],
            "templateData": "<div class=\"reply\">\n    <textarea  uiInput [formControl]=\"text\" class=\"reply__text\" placeholder=\"{{placeholder}}\"></textarea>\n    <button ui-button color=\"primary\" class=\"reply__button\" (click)=\"postReply()\">{{postBtnLabel}}</button>\n</div>"
        },
        {
            "name": "RoadmapComponent",
            "id": "component-RoadmapComponent-02ee3b8255a1e4c5aca81214f7d5bca30e5b4f80865ba6b01b28bde9ecd56418ca8f2737326a3ad46e059bde03b9ca7b0d1ad5e491a53bfe78ebf8bcdc061004",
            "file": "src/app/modules/home/components/roadmap/roadmap.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roadmap",
            "styleUrls": ["./roadmap.component.scss"],
            "styles": [],
            "templateUrl": ["./roadmap.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "linkLabel",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "redirectPath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-roadmap',\n  templateUrl: './roadmap.component.html',\n  styleUrls: ['./roadmap.component.scss']\n})\nexport class RoadmapComponent {\n  @Input() title: string = \"\";\n  @Input() linkLabel: string = \"\";\n  @Input() redirectPath: string = '';\n  @Input() disabled: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n:host {\n    display: block;\n}\n\n.roadmap {\n    background: colors.$white-color;\n    border-radius: 0.625rem;\n    padding: 1.1875rem 1.5rem;\n\n    &__header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    &__title {\n        margin: 0;\n    }\n\n    &__list {\n        padding-left: 0;\n        margin: 1rem 0 0 0;\n\n    }\n\n    &__item{\n        display: flex;\n        width: 100%;\n    }\n\n    &__counter{\n        margin-left: auto;\n    }\n\n    &__status {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    \n        &::before{\n            content: \"\";\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            background: colors.$text-color;\n            border-radius: 50%;\n        }\n\n        &--planned::before{\n            background: colors.$tertiary-color;\n        }\n\n        &--progress::before{\n            background: colors.$primary-color;\n        }\n\n        &--live::before{\n            background: colors.$link-hover-color;\n        }\n\n        &:not(:last-child) {\n            margin-bottom: 0.5rem;\n        }\n    }\n\n    &__counter {\n        color: colors.$title-color;\n        font-weight: bold;\n    }\n\n    &__link--disabled {\n        pointer-events: none;\n        color: lighten(colors.$secondary-color, 10%);\n    }\n}",
                    "styleUrl": "./roadmap.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<article class=\"roadmap\">\n    <div class=\"roadmap__header\">\n        <h3 class=\"roadmap__title\">{{title}}</h3>\n        <a class=\"roadmap__link\" href=\"{{redirectPath}}\" [class.roadmap__link--disabled]=\"disabled\">{{linkLabel}}</a>\n    </div>\n    <div class=\"roadmap__body\">\n        <ul class=\"roadmap__list\">\n            <ng-content></ng-content>\n        </ul>\n    </div>\n</article>"
        },
        {
            "name": "RoadmapDetailComponent",
            "id": "component-RoadmapDetailComponent-5b91f2477bc02ce2cd60034a6e1da356198b21badddb5439bc64d2a508ec4d8084b389791627e1ed6f4b0702a3838e7b6387360b861c594348ae1dc0f5891984",
            "file": "src/app/modules/roadmap/layouts/roadmap-detail/roadmap-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roadmap-detail",
            "styleUrls": ["./roadmap-detail.component.scss"],
            "styles": [],
            "templateUrl": ["./roadmap-detail.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "category",
                    "defaultValue": "'all'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "feedbacks$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Feedback[]>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "feebacksByStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbacksFiltered",
                    "args": [
                        {
                            "name": "category",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feedback[]>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [121],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { map, Observable } from 'rxjs';\nimport { FeedbackService } from '@core/http/feedback.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Feedback } from '@core/models/feedback.model';\n\n@Component({\n  selector: 'app-roadmap-detail',\n  templateUrl: './roadmap-detail.component.html',\n  styleUrls: ['./roadmap-detail.component.scss']\n})\nexport class RoadmapDetailComponent implements OnInit {\n  category: string | null = 'all';\n  feedbacks$!: Observable<Feedback[]>\n  constructor(private location: Location, private feedbacks: FeedbackService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.category = this.route.snapshot.paramMap.get('category');\n    this.feedbacks$ = this.category !== 'all' ? this.getFeedbacksFiltered(this.category) : this.feedbacks.getFeedbackList();\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  feebacksByStatus(status: string) {\n      return this.feedbacks$.pipe(map(feedbacks => feedbacks.filter(feedback => feedback.status === status)));\n  }\n\n  private getFeedbacksFiltered(category: string | null): Observable<Feedback[]> {\n    return this.feedbacks\n        .getFeedbackList()\n        .pipe(map((feedbacks: Feedback[]) => feedbacks.filter((feedback: Feedback) => feedback.category === category)));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"settings/colors\";\n\n.layout {\n    display: flex;\n    flex-direction: column;\n    gap: 2.625rem;\n    \n    margin: 4.875rem auto 0 auto;\n    width: min(69.375rem, 100%);\n    padding: 0 1.5rem;\n}\n\n.back {\n    display: flex;\n    justify-items: center;\n    gap: 1.2294rem;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n\n    &__text{\n        margin: 0;\n        color: white;\n    }\n\n    &__icon {\n        filter: brightness(4);\n    }\n\n    &__title {\n        margin: 0;\n    }\n}\n\n.toolbar {\n    &__header {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        padding: 1rem 0.8125rem;\n    }\n}\n\n.board-margin {\n    margin-bottom: 11.1875rem;\n}\n\n.kanban-card {\n    &__footer {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: repeat(2, auto);\n        gap: 1rem;\n        margin-top: 1rem;\n        \n    }\n\n    &__title:hover {\n        color: colors.$secondary-color;\n        cursor: pointer;\n    }\n\n    &__counter {\n        grid-row: 2;\n    }\n\n    &__comments {\n        grid-row: 2;\n        justify-self: flex-end;\n    }\n\n\n}",
                    "styleUrl": "./roadmap-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": ["OnInit"],
            "templateData": "<section class=\"layout\" *transloco=\"let t\">\n    <ui-toolbar justify=\"between\" class=\"toolbar\">\n        <div class=\"toolbar__header\">\n            <span class=\"back\" (click)=\"goBack()\">\n                <ui-icon class=\"back__icon\" name=\"arrow-left\"></ui-icon>\n                <span class=\"back__text\">Go back!</span>\n            </span>\n            <h3 class=\"back__title text-white\">Roadmap</h3>\n        </div>\n        <button ui-button color=\"primary\" routerLink=\"/feedback/new\">\n            <ui-icon name=\"plus\"></ui-icon> {{ t('createFeedbackLabelButton') }}\n        </button>\n    </ui-toolbar>\n    <app-kanban-board class=\"board-margin\">\n        <app-kanban-column [title]=\"'Planned (' + (feebacksByStatus('planned') | async)?.length + ')'\" subtitle=\"Ideas prioritized for research\" >\n            <app-kanban-card [color]=\"'link'\" *ngFor=\"let feedback of feebacksByStatus('planned') | async\" status=\"Planned\">\n                <h3 kanban-card-title class=\"kanban-card__title\" routerLink=\"/feedback/detail/{{ feedback.id }}\">{{ feedback.title }}</h3>\n                <p kanban-card-text>{{ feedback.description }}</p>\n                <div class=\"kanban-card__footer\">\n                    <ui-chip class=\"kanban-card__feature\" [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n\n                    <ui-counter\n                        class=\"kanban-card__counter\"\n                        [value]=\"feedback.upvotes\"\n                        [limitClicksTo]=\"1\"\n                        [order]=\"'row'\"\n                    ></ui-counter>\n                    <ui-icon class=\"kanban-card__comments\" name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n                </div>\n            </app-kanban-card>\n        </app-kanban-column>\n\n        <app-kanban-column [title]=\"'In-progress (' + (feebacksByStatus('in-progress') | async)?.length + ')'\" subtitle=\"Currently being developed\">\n            <app-kanban-card [color]=\"'primary'\" *ngFor=\"let feedback of feebacksByStatus('in-progress') | async\" status=\"In Progress\">\n                <h3 kanban-card-title class=\"kanban-card__title\" routerLink=\"/feedback/detail/{{ feedback.id }}\">{{ feedback.title }}</h3>\n                <p kanban-card-text>{{ feedback.description }}</p>\n                <div class=\"kanban-card__footer\">\n                    <ui-chip class=\"kanban-card__feature\" [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n\n                    <ui-counter\n                        class=\"kanban-card__counter\"\n                        [value]=\"feedback.upvotes\"\n                        [limitClicksTo]=\"1\"\n                        [order]=\"'row'\"\n                    ></ui-counter>\n                    <ui-icon class=\"kanban-card__comments\" name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n                </div>\n            </app-kanban-card>\n        </app-kanban-column>\n\n        <app-kanban-column [title]=\"'Live (' + (feebacksByStatus('live') | async)?.length + ')'\" subtitle=\"Released features\">\n            <app-kanban-card [color]=\"'tertiary'\" *ngFor=\"let feedback of feebacksByStatus('live') | async\" status=\"Live\">\n                <h3 kanban-card-title class=\"kanban-card__title\" routerLink=\"/feedback/detail/{{ feedback.id }}\">{{ feedback.title }}</h3>\n                <p kanban-card-text>{{ feedback.description }}</p>\n                <div class=\"kanban-card__footer\">\n                    <ui-chip class=\"kanban-card__feature\" [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n\n                    <ui-counter\n                        class=\"kanban-card__counter\"\n                        [value]=\"feedback.upvotes\"\n                        [limitClicksTo]=\"1\"\n                        [order]=\"'row'\"\n                    ></ui-counter>\n                    <ui-icon class=\"kanban-card__comments\" name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n                </div>\n            </app-kanban-card>\n        </app-kanban-column>\n    </app-kanban-board>\n</section>\n"
        },
        {
            "name": "RoadmapItemComponent",
            "id": "component-RoadmapItemComponent-b70a924ae59a5ee75b723bd0c83343c8be4d10b9455225e2bb72e9d31fab0d1787d404d487f528a03ac0133f2d80f86532ba62594aa4c7fb38cb4f781eb391f4",
            "file": "src/app/modules/home/components/roadmap/roadmap-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roadmap-item",
            "styleUrls": ["roadmap-item.component.scss"],
            "styles": [],
            "template": "<li class=\"roadmap-item\">\n  <span class=\"roadmap-item__status\" [ngClass]=\"'roadmap-item__status--' + color\"><ng-content></ng-content></span>\n  <span class=\"roadmap-item__counter\">{{amound}}</span>\n</li>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "amound",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"primary\" | \"link\" | \"tertiary\" | \"none\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-roadmap-item',\n  template: `\n  <li class=\"roadmap-item\">\n    <span class=\"roadmap-item__status\" [ngClass]=\"'roadmap-item__status--' + color\"><ng-content></ng-content></span>\n    <span class=\"roadmap-item__counter\">{{amound}}</span>\n  </li>`,\n  styleUrls: ['roadmap-item.component.scss']\n})\nexport class RoadmapItemComponent {\n  @Input() color: 'primary' | 'link' | 'tertiary' | 'none' = 'none';\n  @Input() amound: number = 0;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n:host {\n    display: block;\n}\n\n.roadmap-item {\n    display: flex;\n    width: 100%;\n    padding: 0;\n    margin-top: 0.5rem;\n\n    &__counter{\n        margin-left: auto;\n        color: colors.$title-color;\n        font-weight: bold;\n    }\n\n    &__status {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    \n        &::before{\n            content: \"\";\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            background: colors.$text-color;\n            border-radius: 50%;\n        }\n\n        &--tertiary::before{\n            background: colors.$tertiary-color;\n        }\n\n        &--primary::before{\n            background: colors.$primary-color;\n        }\n\n        &--link::before{\n            background: colors.$link-hover-color;\n        }\n\n        &:not(:last-child) {\n            margin-bottom: 0.5rem;\n        }\n    }\n}",
                    "styleUrl": "roadmap-item.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UiChipComponent",
            "id": "component-UiChipComponent-707ba43c5ec8772f819acd9e1067029c67ccfc3e400b042faca09f2e1eb81ba70ab8daca1c53308e8f316b6db5049865b9e3f358baf1a59805b9f09ece7a1924",
            "file": "src/app/components/chips/chip/ui-chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chip",
            "styleUrls": ["./ui-chip.component.scss"],
            "styles": [],
            "template": "<span class=\"ui-chip\" [class.ui-chip--active]=\"active\" [class.ui-chip--selected]=\"selectable\" #text>       <ng-content></ng-content>\n   </span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-chip',\n    template: ` <span class=\"ui-chip\" [class.ui-chip--active]=\"active\" [class.ui-chip--selected]=\"selectable\" #text>\n        <ng-content></ng-content>\n    </span>`,\n    styleUrls: ['./ui-chip.component.scss'],\n})\nexport class UiChipComponent {\n    @Input() selectable: boolean = true;\n    @Input() active: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-chip {\n    display: inline-block;\n    font-weight: 600;\n    padding: 0.39em 1.153em;\n    border-radius: 0.625rem;\n    background-color: colors.$chips-background-color;\n    color: colors.$secondary-color;\n\n    &--selected:hover {\n        background-color: darken(colors.$chips-background-color, 10%);\n        color: colors.$secondary-color;\n        cursor: pointer;\n    }\n\n    &--active {\n        background-color: colors.$secondary-color;\n        color: colors.$light-text-color;\n\n        &:hover {\n            background-color: colors.$secondary-color;\n            color: colors.$light-text-color;\n        }\n    }\n}\n",
                    "styleUrl": "./ui-chip.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UiChipListComponent",
            "id": "component-UiChipListComponent-b0e2c92e12ac45f617c88f0d9a1faf237085c494db0bd99e8e1ff205b1a0ed549b881f27530c82e72b0d47601972fbcad90240b040f04396eb8f031ad89679b4",
            "file": "src/app/components/chips/chip-list/ui-chip-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chip-list",
            "styleUrls": ["./ui-chip-list.component.scss"],
            "styles": [],
            "templateUrl": ["./ui-chip-list.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-chip-list',\n    templateUrl: './ui-chip-list.component.html',\n    styleUrls: ['./ui-chip-list.component.scss'],\n})\nexport class UiChipListComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-chip-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n\n    row-gap: 1.125rem;\n    column-gap: 0.5rem;\n}\n",
                    "styleUrl": "./ui-chip-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"ui-chip-list\">\n    <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "UiCounterComponent",
            "id": "component-UiCounterComponent-3311cf623700e93088a62423f5b6bed596827e304307d0b6833f9193b0bc07c359062fa7f13703bf6486416c191ea322d1ca299bcc416020311bd01fd789deb4",
            "file": "src/app/components/counter/ui-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-counter",
            "styleUrls": ["./ui-counter.component.scss"],
            "styles": [],
            "template": "<span        class=\"ui-counter\"\n        (click)=\"increment($event)\"\n        [class.ui-counter--active]=\"active\"\n        [class.ui-counter--row]=\"order === 'row'\"\n    >\n        <img class=\"ui-counter__icon\" src=\"assets/images/icons/icon-arrow-up.svg\" alt=\"counter icon\" />\n        <span class=\"ui-counter__value\">{{ value }}</span>\n    </span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "limitClicksTo",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "order",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"column\" | \"row\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "increment",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isPositiveInteger",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [121],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-counter',\n    template: `<span\n        class=\"ui-counter\"\n        (click)=\"increment($event)\"\n        [class.ui-counter--active]=\"active\"\n        [class.ui-counter--row]=\"order === 'row'\"\n    >\n        <img class=\"ui-counter__icon\" src=\"assets/images/icons/icon-arrow-up.svg\" alt=\"counter icon\" />\n        <span class=\"ui-counter__value\">{{ value }}</span>\n    </span> `,\n    styleUrls: ['./ui-counter.component.scss'],\n})\nexport class UiCounterComponent {\n    @Input() limitClicksTo: number = 0;\n    @Input() order: 'column' | 'row' = 'column';\n    @Input() active: boolean = false;\n    @Input() value: number = 0;\n\n    increment(event: any): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.active) {\n            this.value++;\n            this.limitClicksTo--;\n            this.active = this.limitClicksTo === 0;\n        }\n    }\n\n    private isPositiveInteger(value: string): boolean {\n        return /^\\+?\\d+$/.test(value);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-counter {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    max-width: 2.5rem;\n    min-height: 3.3125rem;\n    padding: 0.39em 1.153em;\n    border-radius: 0.625rem;\n\n    font-weight: 600;\n    background-color: colors.$chips-background-color;\n    color: colors.$text-color;\n    cursor: pointer;\n\n    &__value {\n        font-size: 0.8125rem;\n    }\n\n    &--row {\n        flex-direction: row;\n        gap: 0.625rem;\n        padding: 0.375rem 2rem;\n    }\n\n    &:hover {\n        background-color: darken(colors.$chips-background-color, 10%);\n        color: colors.$secondary-color;\n    }\n\n    &:active {\n        background-color: darken(colors.$chips-background-color, 20%);\n        color: colors.$secondary-color;\n    }\n\n    &--active {\n        background-color: colors.$secondary-color;\n        color: colors.$light-text-color;\n\n        .ui-counter__icon {\n            filter: brightness(0) invert(1);\n        }\n\n        &:hover {\n            background-color: colors.$secondary-color;\n            color: colors.$light-text-color;\n        }\n    }\n\n    &__icon {\n        width: 1rem;\n        height: auto;\n        margin-bottom: 0.5rem;\n    }\n}\n",
                    "styleUrl": "./ui-counter.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UiDividerComponent",
            "id": "component-UiDividerComponent-a8091ffb4d7452612ed161b8551d765c3cb88163ddcafd5b83fff244ab2479ce7ec26c1a5b8d86680117035f54c6020d6bd9fc9c05d8b182a200895641b7586b",
            "file": "src/app/components/divider/ui-divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-divider",
            "styleUrls": ["./ui-divider.component.scss"],
            "styles": [],
            "templateUrl": ["./ui-divider.component.html"],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-divider',\n    templateUrl: './ui-divider.component.html',\n    styleUrls: ['./ui-divider.component.scss'],\n})\nexport class UiDividerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n:host {\n    display: block;\n    margin: 2rem auto;\n    height: 1px;\n    width: 100%;\n    background-color: colors.$divider-background;\n}\n",
                    "styleUrl": "./ui-divider.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "UiErrorComponent",
            "id": "component-UiErrorComponent-9378c74f7acf43ca2bad9ae98ba4fc71d436947bc38ce4ba4f3e52604e7c74b0384e4e7ae874f527a53dcb4cd0ef2c4e8ca7a2846395a4208b24bdecbf1e18d4",
            "file": "src/app/components/form-field/ui-form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-error",
            "styleUrls": [],
            "styles": [
                "\n            @use 'settings/colors';\n\n            .ui-error {\n                font-size: 0.875rem;\n                color: colors.$error-color;\n                margin: 0.25rem 0;\n            }\n        "
            ],
            "template": "<span class=\"ui-error\"><ng-content></ng-content></span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-label',\n    template: `<span class=\"ui-label\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-label {\n                font-size: 0.875rem;\n                color: colors.$text-color;\n                margin: 1rem 0;\n            }\n        `,\n    ],\n})\nexport class UiLabelComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-error',\n    template: `<span class=\"ui-error\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-error {\n                font-size: 0.875rem;\n                color: colors.$error-color;\n                margin: 0.25rem 0;\n            }\n        `,\n    ],\n})\nexport class UiErrorComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-form-field',\n    templateUrl: './ui-form-field.component.html',\n    styleUrls: ['./ui-form-field.component.scss'],\n})\nexport class UiFormFieldComponent {\n    @Input() size: 'fluent' | 'default' = 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            @use 'settings/colors';\n\n            .ui-error {\n                font-size: 0.875rem;\n                color: colors.$error-color;\n                margin: 0.25rem 0;\n            }\n        \n"
        },
        {
            "name": "UiFormFieldComponent",
            "id": "component-UiFormFieldComponent-9378c74f7acf43ca2bad9ae98ba4fc71d436947bc38ce4ba4f3e52604e7c74b0384e4e7ae874f527a53dcb4cd0ef2c4e8ca7a2846395a4208b24bdecbf1e18d4",
            "file": "src/app/components/form-field/ui-form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-form-field",
            "styleUrls": ["./ui-form-field.component.scss"],
            "styles": [],
            "templateUrl": ["./ui-form-field.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "\"fluent\" | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-label',\n    template: `<span class=\"ui-label\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-label {\n                font-size: 0.875rem;\n                color: colors.$text-color;\n                margin: 1rem 0;\n            }\n        `,\n    ],\n})\nexport class UiLabelComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-error',\n    template: `<span class=\"ui-error\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-error {\n                font-size: 0.875rem;\n                color: colors.$error-color;\n                margin: 0.25rem 0;\n            }\n        `,\n    ],\n})\nexport class UiErrorComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-form-field',\n    templateUrl: './ui-form-field.component.html',\n    styleUrls: ['./ui-form-field.component.scss'],\n})\nexport class UiFormFieldComponent {\n    @Input() size: 'fluent' | 'default' = 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n}\n\n.ui-form-field {\n    max-width: 15.9375rem;\n    width: 100%;\n\n    &--fluent {\n        min-width: 100%;\n    }\n}\n",
                    "styleUrl": "./ui-form-field.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"ui-form-field\" [class.ui-form-field--fluent]=\"size === 'fluent'\">\n    <ng-content select=\"ui-label\"></ng-content>\n    <ng-content select=\"[uiInput]\"></ng-content>\n    <ng-content select=\"ui-select\"></ng-content>\n    <ng-content select=\"ui-error\"></ng-content>\n</div>\n"
        },
        {
            "name": "UiIconComponent",
            "id": "component-UiIconComponent-ffb3448aabb87c845b122dc89c81dbdddc8b3cc3da2774d035dc8022aaa52180d0a41dbccf869ad168b2792d4d8eacb06fc1a8e5e3317d2c39208c6778b4f64c",
            "file": "src/app/components/icon/ui-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": ["./ui-icon.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'desktop'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"desktop\" | \"mobile\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getIconPath",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport const ICONS_BASE_PATH = '/assets/images/icons';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-icon',\n    templateUrl: './ui-icon.component.html',\n})\nexport class UiIconComponent {\n    @Input() name!: string;\n    @Input() type: 'desktop' | 'mobile' = 'desktop';\n\n    getIconPath(): string {\n        return this.type === 'desktop'\n            ? `${ICONS_BASE_PATH}/icon-${this.name}.svg`\n            : `${ICONS_BASE_PATH}/${this.type}/icon-${this.name}.svg`;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<img *ngIf=\"name\" [src]=\"getIconPath()\" alt=\"\"/>\n"
        },
        {
            "name": "UiLabelComponent",
            "id": "component-UiLabelComponent-9378c74f7acf43ca2bad9ae98ba4fc71d436947bc38ce4ba4f3e52604e7c74b0384e4e7ae874f527a53dcb4cd0ef2c4e8ca7a2846395a4208b24bdecbf1e18d4",
            "file": "src/app/components/form-field/ui-form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-label",
            "styleUrls": [],
            "styles": [
                "\n            @use 'settings/colors';\n\n            .ui-label {\n                font-size: 0.875rem;\n                color: colors.$text-color;\n                margin: 1rem 0;\n            }\n        "
            ],
            "template": "<span class=\"ui-label\"><ng-content></ng-content></span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-label',\n    template: `<span class=\"ui-label\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-label {\n                font-size: 0.875rem;\n                color: colors.$text-color;\n                margin: 1rem 0;\n            }\n        `,\n    ],\n})\nexport class UiLabelComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-error',\n    template: `<span class=\"ui-error\"><ng-content></ng-content></span>`,\n    styles: [\n        `\n            @use 'settings/colors';\n\n            .ui-error {\n                font-size: 0.875rem;\n                color: colors.$error-color;\n                margin: 0.25rem 0;\n            }\n        `,\n    ],\n})\nexport class UiErrorComponent {}\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-form-field',\n    templateUrl: './ui-form-field.component.html',\n    styleUrls: ['./ui-form-field.component.scss'],\n})\nexport class UiFormFieldComponent {\n    @Input() size: 'fluent' | 'default' = 'default';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            @use 'settings/colors';\n\n            .ui-label {\n                font-size: 0.875rem;\n                color: colors.$text-color;\n                margin: 1rem 0;\n            }\n        \n"
        },
        {
            "name": "UiSelectOptionComponent",
            "id": "component-UiSelectOptionComponent-c41557e226025ebfd2975d96647986825b82762434269c519a596628b02d8ac14531e7de0f24e74c76bedd034e6ba6679caee6f71c3ea27c292b2adeb447372b",
            "file": "src/app/components/select/ui-select-option.component.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-select-option",
            "styleUrls": ["./ui-select-option.component.scss"],
            "styles": [],
            "template": "<button class=\"ui-select-option\" [class.ui-select-option--selected]=\"selected\" #text>        <ng-content></ng-content><img *ngIf=\"selected\" src=\"assets/images/icons/icon-check.svg\" alt=\"\" />\n    </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "textElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'text'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": ["$event"],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { UiSelectService } from './ui-select.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-select-option',\n    template: `<button class=\"ui-select-option\" [class.ui-select-option--selected]=\"selected\" #text>\n        <ng-content></ng-content><img *ngIf=\"selected\" src=\"assets/images/icons/icon-check.svg\" alt=\"\" />\n    </button> `,\n    styleUrls: ['./ui-select-option.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiSelectOptionComponent {\n    @Input() value: string = '';\n    @ViewChild('text') textElement!: ElementRef;\n    selected: boolean = false;\n\n    constructor(private select: UiSelectService) {}\n\n    @HostListener('click', ['$event'])\n    click() {\n        this.select.getSelect().selectOption(this);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-select-option {\n    background: transparent;\n    color: colors.$text-color;\n    border: none;\n    padding: 0.75rem 1.5rem;\n    cursor: pointer;\n    width: 100%;\n\n    text-align: left;\n\n    &:hover {\n        color: colors.$primary-color;\n    }\n\n    &--selected {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n",
                    "styleUrl": "./ui-select-option.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UiSelectPanelComponent",
            "id": "component-UiSelectPanelComponent-a4c74cd818b0bc1b548cecd51a25744fa3acc8fd489834e69808649f327c36714634ccda3c773994c360655221e428b3b1a7c42c372cb003bafe3d4eb88ecabb",
            "file": "src/app/components/select/ui-select-panel.component.ts",
            "encapsulation": ["ViewEncapsulation.None"],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => UiSelectPanelComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "ui-select",
            "styleUrls": ["./ui-select-panel.component.scss"],
            "styles": [],
            "templateUrl": ["./ui-select-panel.component.html"],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_triggerRect",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "displayedText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "isDropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "onChangeFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "onTouchedFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<UiSelectOptionComponent>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "UiSelectOptionComponent"
                        }
                    ]
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiSelectOptionComponent",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'trigger'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpened",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "UiSelectOptionComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "UiSelectOptionComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n    AfterViewInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    forwardRef,\n    Input,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fadeInOut } from '@components/animations/fade.animation';\nimport { UiSelectOptionComponent } from './ui-select-option.component';\nimport { UiSelectService } from './ui-select.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-select',\n    templateUrl: './ui-select-panel.component.html',\n    styleUrls: ['./ui-select-panel.component.scss'],\n    animations: [fadeInOut],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UiSelectPanelComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UiSelectPanelComponent implements AfterViewInit, ControlValueAccessor {\n    @Input() selected: string = '';\n    @Input() placeholder: string = '';\n    @Input() disabled: boolean = false;\n    @ViewChild('trigger') trigger!: ElementRef;\n\n    @ContentChildren(UiSelectOptionComponent) options!: QueryList<UiSelectOptionComponent>;\n\n    selectedOption!: UiSelectOptionComponent;\n    displayedText: string = '';\n\n    _triggerRect: any = null;\n\n    isDropdownOpen: boolean = false;\n\n    constructor(private select: UiSelectService) {\n        this.select.register(this);\n    }\n\n    ngAfterViewInit(): void {\n        if (this.selected !== '') {\n            this.setSelected();\n        }\n    }\n\n    onTouchedFn = () => {};\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onChangeFn = (_: any) => {};\n\n    toggleDropdown() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.isDropdownOpen ? this.onClose() : this.onOpened();\n    }\n\n    selectOption(option: UiSelectOptionComponent) {\n        this.selectedOption = option;\n        this.selected = option.value;\n        this.displayedText = this.selectedOption && this.selected !== '' ? option.textElement.nativeElement.innerText : '';\n        this.isDropdownOpen = false;\n        this.setSelected();\n        this.onChangeFn(this.selected);\n    }\n\n    onOpened() {\n        this._triggerRect = this.trigger?.nativeElement.getBoundingClientRect();\n        this.isDropdownOpen = true;\n        this.onTouchedFn();\n    }\n\n    onClose() {\n        this.isDropdownOpen = false;\n    }\n\n    setSelected() {\n        this.options.forEach((opt) => (opt.selected = opt.value === this.selected));\n    }\n\n    writeValue(fn: any): void {\n        this.displayedText = fn;\n        this.selected = fn;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedFn = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-selector {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: colors.$bg-input-color;\n    padding: 0.8125em 1.5em;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 1rem 0;\n\n    &__input {\n        border: 0;\n        background-color: inherit;\n        cursor: pointer;\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    &--active {\n        outline: 1px solid colors.$outline-active-color;\n    }\n\n    &--error {\n        outline: 1px solid colors.$outline-error-color;\n    }\n\n    &--focus {\n        outline: 1px solid colors.$outline-active-color;\n    }\n}\n\n.ui-select-panel {\n    display: flex;\n    flex-direction: column;\n\n    margin: 1rem 0;\n    min-width: 100%;\n    background-color: white;\n    border-radius: 0.625rem;\n    box-shadow: 0px 0.625rem 2.5rem -0.4375rem rgba(55, 63, 104, 0.350492);\n\n    & > ui-select-option:not(:last-child) {\n        border: none;\n        border-bottom: 1px solid hsla(0, 0, 53, 45%);\n    }\n}\n",
                    "styleUrl": "./ui-select-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": ["AfterViewInit", "ControlValueAccessor"],
            "templateData": "<div\n    class=\"ui-selector\"\n    [class.ui-selector--focus]=\"isDropdownOpen\"\n    cdkOverlayOrigin\n    (click)=\"toggleDropdown()\"\n    #origin=\"cdkOverlayOrigin\"\n    #trigger\n>\n    <input class=\"ui-selector__input\" [value]=\"displayedText\" [placeholder]=\"placeholder\" type=\"text\" readonly autocomplete=\"off\" />\n    <img *ngIf=\"!isDropdownOpen\" class=\"ui-selector__icon\" src=\"assets/images/icons/icon-arrow-down.svg\" alt=\"Selector displayed\" />\n    <img *ngIf=\"isDropdownOpen\" class=\"ui-selector__icon\" src=\"assets/images/icons/icon-arrow-up.svg\" alt=\"Selector displayed\" />\n</div>\n\n<ng-template\n    cdkConnectedOverlay\n    cdkConnectedOverlayLockPosition\n    cdkConnectedOverlayHasBackdrop\n    cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n    [cdkConnectedOverlayOrigin]=\"origin\"\n    [cdkConnectedOverlayOpen]=\"isDropdownOpen\"\n    [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width!\"\n    (backdropClick)=\"isDropdownOpen = false\"\n>\n    <div class=\"ui-select-panel\" @fadeInOut>\n        <ng-content></ng-content>\n    </div>\n</ng-template>\n"
        },
        {
            "name": "UiToolbarComponent",
            "id": "component-UiToolbarComponent-f5a449329782d419d80d774f0e55223d6d833ed566dce599adac8cb1040c095803892a4e9e67483b5e1a5492eb9677109812097d8bdc163951e5f2fc8bb6dd3b",
            "file": "src/app/components/toolbar/ui-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-toolbar",
            "styleUrls": ["./ui-toolbar.component.scss"],
            "styles": [],
            "template": "<div class=\"ui-toolbar\" [ngClass]=\"getJustifyClass()\" [class.bg-transparent]=\"background === 'transparent'\">        <ng-content></ng-content>\n    </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"transparent\" | \"default\"",
                    "decorators": []
                },
                {
                    "name": "justify",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "JusfityType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getJustifyClass",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport type JusfityType = 'start' | 'end' | 'center' | 'between' | 'around';\n\nexport const JUSTIFY_CSS_CLASES = {\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n};\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-toolbar',\n    template: `<div class=\"ui-toolbar\" [ngClass]=\"getJustifyClass()\" [class.bg-transparent]=\"background === 'transparent'\">\n        <ng-content></ng-content>\n    </div> `,\n    styleUrls: ['./ui-toolbar.component.scss'],\n})\nexport class UiToolbarComponent {\n    @Input() justify: JusfityType = 'start';\n    @Input() background: 'transparent' | 'default' = 'default';\n\n    getJustifyClass(): string {\n        return JUSTIFY_CSS_CLASES[this.justify];\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n:host {\n    display: block;\n}\n\n.ui-toolbar {\n    display: flex;\n    padding: 0.875rem 1rem;\n    background-color: colors.$toolbar-background-color;\n    border-radius: 0.625rem;\n    color: colors.$light-text-color;\n\n    &--between {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    &--around {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    }\n\n    &--end {\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    &--center {\n        justify-content: center;\n        align-items: center;\n    }\n\n    &--start {\n        justify-content: flex-start;\n        align-items: center;\n    }\n}\n",
                    "styleUrl": "./ui-toolbar.component.scss"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-fa20bba699bfab13abd4db576dd47c6cebe64c8d8a4f14dd653b5534622176e870a4a50aa75675ce643ebc0b87333e113f70691d73270958965beaa3692f7d88",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FeedbackModule } from './modules/feedback/feedback.module';\nimport { HomeModule } from './modules/home/home.module';\nimport { TranslocoRootModule } from './transloco-root.module';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        TranslocoRootModule,\n\n        // Modules\n        HomeModule,\n        FeedbackModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "FeedbackModule"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-e3aa31c0716029b0c4446da1619ecffad059dd181d45766546e3e9a8a1bdce85c2ae374c523e57d56e06fc2d1a2b00495d42e82006d6a9758beedd78e87be65b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        loadChildren: () => \"import('./modules/home/home.module').then((m) => m.HomeModule)\",\n    },\n\n    {\n        path: 'feedback',\n        loadChildren: () => \"import('./modules/feedback/feedback.module').then((m) => m.FeedbackModule)\",\n    },\n\n    {\n        path: 'roadmap',\n        loadChildren: () => \"import('./modules/roadmap/roadmap.module').then((m)=> m.RoadmapModule)\"\n    },\n\n    {\n        path: '**',\n        redirectTo: '',\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BannerModule",
            "id": "module-BannerModule-6238079d61596ac4da4f680dfc49a4befbf53a435cb8b9d4006a6f50a5ceda77269f175091b245c769eff3a34513cd467cca5abacd5e122636b6341f66403897",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/components/banner/banner.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner.component';\nimport { BannerSubtitleDirective, BannerTitleDirective } from './banner.directive';\n\n@NgModule({\n    declarations: [BannerTitleDirective, BannerSubtitleDirective, BannerComponent],\n    imports: [CommonModule],\n    exports: [BannerTitleDirective, BannerSubtitleDirective, BannerComponent],\n})\nexport class BannerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BannerSubtitleDirective"
                        },
                        {
                            "name": "BannerTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BannerSubtitleDirective"
                        },
                        {
                            "name": "BannerTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CommentModule",
            "id": "module-CommentModule-e777b4ad0d9b4a9f9a54feb0000386804c9fcdac3122f9497309aee732146133df8a7482a2a7c992eae3b2722e7c1bf1839291f475fac361f5d61612b57edf2a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/feedback/components/comment/comment.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CommentAvatarDirective, CommentComponent, CommentIdDirective, CommentNameDirective, CommentRepliesDirective, CommentTextDirective } from './comment';\n\n@NgModule({\n    declarations: [CommentComponent, CommentIdDirective, CommentAvatarDirective, CommentNameDirective, CommentTextDirective, CommentRepliesDirective],\n    imports: [CommonModule],\n    exports: [CommentComponent, CommentIdDirective, CommentAvatarDirective, CommentNameDirective, CommentTextDirective, CommentRepliesDirective],\n})\nexport class CommentModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CommentAvatarDirective"
                        },
                        {
                            "name": "CommentComponent"
                        },
                        {
                            "name": "CommentIdDirective"
                        },
                        {
                            "name": "CommentNameDirective"
                        },
                        {
                            "name": "CommentRepliesDirective"
                        },
                        {
                            "name": "CommentTextDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CommentAvatarDirective"
                        },
                        {
                            "name": "CommentComponent"
                        },
                        {
                            "name": "CommentIdDirective"
                        },
                        {
                            "name": "CommentNameDirective"
                        },
                        {
                            "name": "CommentRepliesDirective"
                        },
                        {
                            "name": "CommentTextDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EmptyFeedbacksModule",
            "id": "module-EmptyFeedbacksModule-081271e4856f40522ca623e944cc661ba0418d18260b11be25ae8aa671a6d4a4c2a094f8735c891ffd1bc24392be5bbda210d779c39bb0a2ac40d7307c9a7d9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EmptyFeedbacksComponent } from './empty-feedbacks.component';\nimport { EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective } from './empty-feedbacks.directive';\n\n@NgModule({\n    declarations: [EmptyFeedbacksComponent, EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective],\n    imports: [CommonModule],\n    exports: [EmptyFeedbacksComponent, EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective],\n})\nexport class EmptyFeedbacksModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EmptyFeedbacksBodyDirective"
                        },
                        {
                            "name": "EmptyFeedbacksComponent"
                        },
                        {
                            "name": "EmptyFeedbacksTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EmptyFeedbacksBodyDirective"
                        },
                        {
                            "name": "EmptyFeedbacksComponent"
                        },
                        {
                            "name": "EmptyFeedbacksTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedbackModule",
            "id": "module-FeedbackModule-ad333c8174b81a8a699f9b8590cef2cb0d772223442da36735472d9a3094fb299e1d7c2ae343103c9da3893065fb4d4b7e148df69814f5a6a29188219122694d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/feedback/feedback.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UiBadgeModule } from '@components/badge/ui-badge.module';\nimport { UiButtonModule } from '@components/button/ui-button.module';\nimport { UiChipsModule } from '@components/chips/ui-chips.module';\nimport { UiCounterModule } from '@components/counter/ui-counter.module';\nimport { UiDividerModule } from '@components/divider/ui-divider.module';\nimport { UiFeedbackCardModule } from '@components/feedback-card/feedback-card.module';\nimport { UiFormFieldModule } from '@components/form-field/ui-form-field.module';\nimport { UiIconModule } from '@components/icon/ui-icon.module';\nimport { UiInputModule } from '@components/input/ui-input.module';\nimport { UiSelectModule } from '@components/select/ui-select.module';\nimport { UiToolbarModule } from '@components/toolbar/ui-toolbar.module';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { BackBtnComponent } from './components/back-btn/back-btn.component';\nimport { CommentFormComponent } from './components/comment-form/comment-form.component';\nimport { CommentModule } from './components/comment/comment.module';\nimport { FormCardComponent } from './components/form-card/form-card.component';\nimport { FeedbackDetailComponent } from './layouts/feedback-detail/feedback-detail.component';\nimport { FeedbackFormComponent } from './layouts/feedback-form/feedback-form.component';\nimport { ReplyComponent } from './components/reply/reply.component';\n\nconst routes: Routes = [\n    {\n        path: 'detail/:id',\n        component: FeedbackDetailComponent,\n    },\n    {\n        path: 'new',\n        component: FeedbackFormComponent,\n    },\n\n    {\n        path: 'edit/:id',\n        component: FeedbackFormComponent,\n    },\n];\n\n@NgModule({\n    declarations: [FeedbackDetailComponent, FeedbackFormComponent, BackBtnComponent, FormCardComponent, CommentFormComponent, ReplyComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        UiToolbarModule,\n        UiButtonModule,\n        UiIconModule,\n        UiFeedbackCardModule,\n        UiCounterModule,\n        UiChipsModule,\n        UiBadgeModule,\n        UiFormFieldModule,\n        UiInputModule,\n        UiSelectModule,\n        UiDividerModule,\n        CommentModule,\n        TranslocoModule,\n        ReactiveFormsModule,\n    ],\n    exports: [RouterModule],\n})\nexport class FeedbackModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackBtnComponent"
                        },
                        {
                            "name": "CommentFormComponent"
                        },
                        {
                            "name": "FeedbackDetailComponent"
                        },
                        {
                            "name": "FeedbackFormComponent"
                        },
                        {
                            "name": "FormCardComponent"
                        },
                        {
                            "name": "ReplyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CommentModule"
                        },
                        {
                            "name": "UiBadgeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "UiChipsModule"
                        },
                        {
                            "name": "UiCounterModule"
                        },
                        {
                            "name": "UiDividerModule"
                        },
                        {
                            "name": "UiFeedbackCardModule"
                        },
                        {
                            "name": "UiFormFieldModule"
                        },
                        {
                            "name": "UiIconModule"
                        },
                        {
                            "name": "UiInputModule"
                        },
                        {
                            "name": "UiSelectModule"
                        },
                        {
                            "name": "UiToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-1f72563e97bdafa8d4ab2e860036cf8f201e16cff76ce164a32032817ede0e6d06657599333a31fd899c9f76b5806e411210c13e36b10ba10d6160e861c1adc8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UiBadgeModule } from '@components/badge/ui-badge.module';\nimport { UiButtonModule } from '@components/button/ui-button.module';\nimport { UiChipsModule } from '@components/chips/ui-chips.module';\nimport { UiCounterModule } from '@components/counter/ui-counter.module';\nimport { UiFeedbackCardModule } from '@components/feedback-card/feedback-card.module';\nimport { UiIconModule } from '@components/icon/ui-icon.module';\nimport { UiToolbarModule } from '@components/toolbar/ui-toolbar.module';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { BannerModule } from './components/banner/banner.module';\nimport { CategoryFilterComponent } from './components/category-filter/category-filter.component';\nimport { EmptyFeedbacksModule } from './components/empty-feedbacks/empty-feedbacks.module';\nimport { HomeComponent } from './layout/home.component';\nimport { RoadmapModule } from './components/roadmap/roadmap.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent,\n        pathMatch: 'full',\n    },\n];\n\n@NgModule({\n    declarations: [HomeComponent, CategoryFilterComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule,\n        UiCounterModule,\n        UiBadgeModule,\n        UiChipsModule,\n        UiIconModule,\n        UiToolbarModule,\n        UiButtonModule,\n        UiFeedbackCardModule,\n        EmptyFeedbacksModule,\n        BannerModule,\n        TranslocoModule,\n        RoadmapModule\n    ],\n    exports: [RouterModule],\n})\nexport class HomeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CategoryFilterComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BannerModule"
                        },
                        {
                            "name": "EmptyFeedbacksModule"
                        },
                        {
                            "name": "RoadmapModule"
                        },
                        {
                            "name": "UiBadgeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "UiChipsModule"
                        },
                        {
                            "name": "UiCounterModule"
                        },
                        {
                            "name": "UiFeedbackCardModule"
                        },
                        {
                            "name": "UiIconModule"
                        },
                        {
                            "name": "UiToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "KanbanCardModule",
            "id": "module-KanbanCardModule-f04d43d282c88ac3be1c749a63327577cebd989e84134e9e1c586af3d9dfde4afc4e2944ddee47013ac8e7bd0daea6050e3285d42d24934ed701778eb96735f5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/roadmap/components/kanban-card/kanban-card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KanbanCardComponent, KanbanCardTextDirective, KanbanCardTitleDirective } from './kanban-card';\n\n@NgModule({\n  declarations: [\n    KanbanCardComponent,\n    KanbanCardTitleDirective,\n    KanbanCardTextDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    KanbanCardComponent,  \n    KanbanCardTitleDirective,\n    KanbanCardTextDirective\n  ]\n})\nexport class KanbanCardModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "KanbanCardComponent"
                        },
                        {
                            "name": "KanbanCardTextDirective"
                        },
                        {
                            "name": "KanbanCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "KanbanCardComponent"
                        },
                        {
                            "name": "KanbanCardTextDirective"
                        },
                        {
                            "name": "KanbanCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RoadmapModule",
            "id": "module-RoadmapModule-0b397517a1ad08e1eb57c7708c45a5ca7168d34d44d083c9f5114fa551e0bd44164f40812b053483b5fada18560856b30b46895104ea1a2705e96ef1e0ca1e8e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/roadmap/roadmap.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoadmapDetailComponent } from './layouts/roadmap-detail/roadmap-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UiToolbarModule } from '@components/toolbar/ui-toolbar.module';\nimport { UiButtonModule } from '@components/button/ui-button.module';\nimport { UiIconModule } from '@components/icon/ui-icon.module';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { KanbanCardModule } from './components/kanban-card/kanban-card.module';\nimport { KanbanColumnComponent } from './components/kanban-column/kanban-column.component';\nimport { KanbanBoardComponent } from './components/kanban-board/kanban-board.component';\nimport { UiCounterModule } from '@components/counter/ui-counter.module';\nimport { UiBadgeModule } from '@components/badge/ui-badge.module';\nimport { UiChipsModule } from '@components/chips/ui-chips.module';\n\nconst routes = [\n  {\n    path: ':category',\n    component: RoadmapDetailComponent,\n    pathMatch: 'full'\n  }\n]\n\n@NgModule({\n  declarations: [\n    RoadmapDetailComponent,\n    KanbanColumnComponent,\n    KanbanBoardComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    TranslocoModule,\n    UiToolbarModule,\n    UiButtonModule,\n    UiIconModule,\n    KanbanCardModule,\n    UiCounterModule,\n    UiBadgeModule,\n    UiChipsModule\n  ]\n})\nexport class RoadmapModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "KanbanBoardComponent"
                        },
                        {
                            "name": "KanbanColumnComponent"
                        },
                        {
                            "name": "RoadmapDetailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "KanbanCardModule"
                        },
                        {
                            "name": "UiBadgeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "UiChipsModule"
                        },
                        {
                            "name": "UiCounterModule"
                        },
                        {
                            "name": "UiIconModule"
                        },
                        {
                            "name": "UiToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RoadmapModule",
            "id": "module-RoadmapModule-562604d1500aeb02543530daf2f5a314b7e523e43978bc7f9e073bbae888993c4de986882db331c945d3e8eb5cb6567d3f24b7bccc79c51888b64a7ff94c4d7a-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/components/roadmap/roadmap.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoadmapComponent } from './roadmap.component';\nimport { RoadmapItemComponent } from './roadmap-item.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [RoadmapComponent, RoadmapItemComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [RoadmapComponent, RoadmapItemComponent],\n})\nexport class RoadmapModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RoadmapComponent"
                        },
                        {
                            "name": "RoadmapItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RoadmapComponent"
                        },
                        {
                            "name": "RoadmapItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TranslocoRootModule",
            "id": "module-TranslocoRootModule-5ccb1d6465eb1b52a67b732370bfd47d524e05ce79443df804d1c0bb0c4a731098685225f6c5f9948c22acb9d91ec3969fb7b1cebee4dc5fb5a9bd120d939b26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/transloco-root.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiBadgeModule",
            "id": "module-UiBadgeModule-cc09fc693b44f7626de925c1e7754da7e1d0d071f03594cb9d16b67e2a128d4879f18064026ade6c28eb1e2fba88855d1af01906e7859191155e273995b9cad7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/badge/ui-badge.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiBadgeDirective } from './ui-badge.directive';\n\n@NgModule({\n    declarations: [UiBadgeDirective],\n    imports: [CommonModule],\n    exports: [UiBadgeDirective],\n})\nexport class UiBadgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiButtonModule",
            "id": "module-UiButtonModule-71b3862a78bc1e8f9830d13f98bb504640fdaef76d29a278473e61c5b900b6237205178e4a35dec1d0b3b239f31241005690ccc10f0a4f61087d725e3768587a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/button/ui-button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiButtonDirective } from './ui-button.directive';\n\n@NgModule({\n    declarations: [UiButtonDirective],\n    imports: [CommonModule],\n    exports: [UiButtonDirective],\n})\nexport class UiButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiChipsModule",
            "id": "module-UiChipsModule-53de5fa3a2d459a5fec888b7f3c7986f52e65d667eee146ac3287b952b06db40f1e3a26516938a49215c0bfe9ac17651be75c6a65c2415e354c6e15c0fb82a0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/chips/ui-chips.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiChipListComponent } from './chip-list/ui-chip-list.component';\nimport { UiChipComponent } from './chip/ui-chip.component';\n\n@NgModule({\n    declarations: [UiChipComponent, UiChipListComponent],\n    imports: [CommonModule],\n    exports: [UiChipComponent, UiChipListComponent],\n})\nexport class UiChipsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiChipComponent"
                        },
                        {
                            "name": "UiChipListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiChipComponent"
                        },
                        {
                            "name": "UiChipListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiCounterModule",
            "id": "module-UiCounterModule-46a52df1efea7214ef401af7dc383d6d109cc31a66fef71453ab07018b698a2bbf4b05298a4db018583ec158427539cf416607b4c170580979c2cb9557c03adb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/counter/ui-counter.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCounterComponent } from './ui-counter.component';\n\n@NgModule({\n    declarations: [UiCounterComponent],\n    imports: [CommonModule],\n    exports: [UiCounterComponent],\n})\nexport class UiCounterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiCounterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiCounterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiDividerModule",
            "id": "module-UiDividerModule-61a32d25cc06e076af464b44bb0939c89c91ed58faad9ef7835765d2509d6b8a01944b5ce6dc66c40a36209ad77e08e7ceee7d9fd3bb0a181948a114868a1a4c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/divider/ui-divider.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiDividerComponent } from './ui-divider.component';\n\n@NgModule({\n    declarations: [UiDividerComponent],\n    imports: [CommonModule],\n    exports: [UiDividerComponent],\n})\nexport class UiDividerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiDividerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiDividerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiFeedbackCardModule",
            "id": "module-UiFeedbackCardModule-afa8a8b3dd55ba5ff034205566ffe4b83d35e10524624e0b5923578d8c7e4d45c18816e6f99bdb5d048c2e277e659b1cc12970177a9c7ca9ae837262450c3c85",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/feedback-card/feedback-card.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FeedbackCardComponent } from './feedback-card.component';\nimport {\n    FeedbackCardContentDirective,\n    FeedbackCardFooterDirective,\n    FeedbackCardSideDirective,\n    FeedbackCardTitleDirective,\n} from './feeed-card.directive';\n\n@NgModule({\n    declarations: [\n        FeedbackCardComponent,\n        FeedbackCardContentDirective,\n        FeedbackCardFooterDirective,\n        FeedbackCardTitleDirective,\n        FeedbackCardSideDirective,\n    ],\n    imports: [CommonModule],\n    exports: [\n        FeedbackCardComponent,\n        FeedbackCardContentDirective,\n        FeedbackCardFooterDirective,\n        FeedbackCardTitleDirective,\n        FeedbackCardSideDirective,\n    ],\n})\nexport class UiFeedbackCardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FeedbackCardComponent"
                        },
                        {
                            "name": "FeedbackCardContentDirective"
                        },
                        {
                            "name": "FeedbackCardFooterDirective"
                        },
                        {
                            "name": "FeedbackCardSideDirective"
                        },
                        {
                            "name": "FeedbackCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FeedbackCardComponent"
                        },
                        {
                            "name": "FeedbackCardContentDirective"
                        },
                        {
                            "name": "FeedbackCardFooterDirective"
                        },
                        {
                            "name": "FeedbackCardSideDirective"
                        },
                        {
                            "name": "FeedbackCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiFormFieldModule",
            "id": "module-UiFormFieldModule-33624eaa5b6bcd921c09c839704f0ec492ace0880e9015647056938713ad56d3b44ef2c4757eb5d3b77659d1663c0b5cb8febc81dc981605925a6e67122c99fc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/form-field/ui-form-field.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiErrorComponent, UiFormFieldComponent, UiLabelComponent } from './ui-form-field.component';\n\n@NgModule({\n    declarations: [UiFormFieldComponent, UiLabelComponent, UiErrorComponent],\n    imports: [CommonModule],\n    exports: [UiFormFieldComponent, UiLabelComponent, UiErrorComponent],\n})\nexport class UiFormFieldModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiErrorComponent"
                        },
                        {
                            "name": "UiFormFieldComponent"
                        },
                        {
                            "name": "UiLabelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiErrorComponent"
                        },
                        {
                            "name": "UiFormFieldComponent"
                        },
                        {
                            "name": "UiLabelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiIconModule",
            "id": "module-UiIconModule-ce2e8605a5fef4847f19b3601787f57dda1d7d941d35cc7f42d257b9e6905529ac83f1e9554d2b0f5c36e3719c1d0d2a17f1d7900530e8cd381567a32fa4c66a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/icon/ui-icon.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiIconComponent } from './ui-icon.component';\n\n@NgModule({\n    declarations: [UiIconComponent],\n    imports: [CommonModule],\n    exports: [UiIconComponent],\n})\nexport class UiIconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiInputModule",
            "id": "module-UiInputModule-937f68cba34ee161454639807bbb8eb8dd631f28bc7509833dffa7c3606352740d3eeaa3afa857abbf5e11df6ddbc002aea61032cb07a34a27bf2d3e02c4e823",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/input/ui-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiInputDirective } from './ui-input.directive';\n\n@NgModule({\n    declarations: [UiInputDirective],\n    imports: [CommonModule],\n    exports: [UiInputDirective],\n})\nexport class UiInputModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiInputDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiInputDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiSelectModule",
            "id": "module-UiSelectModule-a31f098ef9cfc94aee4ed3bbf582abab90d6a7aafdc7907c61973db26d286c7960d7ba027c103c028acac79fb131f193e794fe79c802bbe118450d58a824872e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/select/ui-select.module.ts",
            "methods": [],
            "sourceCode": "import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiSelectOptionComponent } from './ui-select-option.component';\nimport { UiSelectPanelComponent } from './ui-select-panel.component';\n\n@NgModule({\n    declarations: [UiSelectPanelComponent, UiSelectOptionComponent],\n    imports: [CommonModule, OverlayModule],\n    exports: [UiSelectPanelComponent, UiSelectOptionComponent],\n})\nexport class UiSelectModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiSelectOptionComponent"
                        },
                        {
                            "name": "UiSelectPanelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiSelectOptionComponent"
                        },
                        {
                            "name": "UiSelectPanelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiToolbarModule",
            "id": "module-UiToolbarModule-70c5c16c3ac3e6c7d166f21cd533004160a4056393543dfb8bfc740f9cfbad5a24fceda4da4533e53c8e5b648e41d5924eb2fccc35a6aa6dc53d1b28183fee84",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/toolbar/ui-toolbar.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiToolbarComponent } from './ui-toolbar.component';\n\n@NgModule({\n    declarations: [UiToolbarComponent],\n    imports: [CommonModule],\n    exports: [UiToolbarComponent],\n})\nexport class UiToolbarModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chips/stories/chip-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chips/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configureTests",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: false,\n}"
            },
            {
                "name": "fadeInOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/animations/fade.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('.3s ease-out', style({ opacity: 1 }))]),\n    transition(':leave', [animate('.3s ease-in', style({ opacity: 0 }))]),\n])"
            },
            {
                "name": "ICONS_BASE_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/icon/ui-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/assets/images/icons'"
            },
            {
                "name": "JUSTIFY_CSS_CLASES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/ui-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n}"
            },
            {
                "name": "mock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "setup-jest.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/roadmap/roadmap.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    path: ':category',\n    component: RoadmapDetailComponent,\n    pathMatch: 'full'\n  }\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiButtonDirective>",
                "defaultValue": "(args: UiButtonDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiButtonDirective],\n        imports: [CommonModule],\n    },\n    template: `<button ui-button [color]=\"color\" [size]=\"size\">Button</button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiBadgeDirective>",
                "defaultValue": "(args: UiBadgeDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiBadgeDirective],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\" ui-badge value=\"3\"></ui-icon>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiCounterComponent>",
                "defaultValue": "(args: UiCounterComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiCounterComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-counter></ui-counter>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiIconComponent>",
                "defaultValue": "(args: UiIconComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiIconComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\"></ui-icon> `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiInputDirective>",
                "defaultValue": "(args: UiInputDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiInputDirective],\n        imports: [CommonModule],\n    },\n    template: `<input uiInput [ngModel]=\"value\" placeholder=\"This is sparta!\"/>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiSelectPanelComponent>",
                "defaultValue": "(args: UiSelectPanelComponent) => ({\n    props: args,\n    moduleMetadata: {\n        imports: [UiSelectModule],\n    },\n    template: `\n\t<ui-select label=\"Name\" placeholder=\"Select the option\">\n\t\t<ui-select-option value=\"option1\">Option 1</ui-select-option>\n\t\t<ui-select-option value=\"option2\">Option 2</ui-select-option>\n\t\t<ui-select-option value=\"option3\">Option 3</ui-select-option>\n\t</ui-select>\n`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiToolbarComponent>",
                "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-toolbar>Toolbar</ui-toolbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chips/stories/chip-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiChipListComponent>",
                "defaultValue": "(args: UiChipListComponent) => ({\n    props: args,\n    template: `<ui-chip-list><ui-chip>One</ui-chip><ui-chip>Two</ui-chip></ui-chip-list>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chips/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiChipComponent>",
                "defaultValue": "(args: UiChipComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip>Chip</ui-chip>`,\n})"
            },
            {
                "name": "TemplateTransparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiToolbarComponent>",
                "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule, UiButtonModule],\n    },\n    template: `<ui-toolbar background=\"transparent\"><button ui-button color=\"light\">Login</button></ui-toolbar>`,\n})"
            },
            {
                "name": "TemplateWithLogo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiToolbarComponent>",
                "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule, UiButtonModule],\n    },\n    template: `<ui-toolbar justify=\"between\"><img src=\"/assets/images/suggestions/icon-suggestions.svg\" alt=\"Logo image\"/>\n\t<button ui-button color=\"dark\">Login</button></ui-toolbar>`,\n})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateTransparent.bind({})"
            },
            {
                "name": "WithLogo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateWithLogo.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonColors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"light\" | \"dark\" | \"error\" | \"default\"",
                "file": "src/app/components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"long\" | \"default\"",
                "file": "src/app/components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"submit\" | \"reset\"",
                "file": "src/app/components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "CompilerOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<literal type>",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ConfigureFn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "JusfityType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"start\" | \"end\" | \"center\" | \"between\" | \"around\"",
                "file": "src/app/components/toolbar/ui-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiButtonDirective>",
                    "defaultValue": "(args: UiButtonDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiButtonDirective],\n        imports: [CommonModule],\n    },\n    template: `<button ui-button [color]=\"color\" [size]=\"size\">Button</button>`,\n})"
                }
            ],
            "src/app/components/badge/badge.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiBadgeDirective>",
                    "defaultValue": "(args: UiBadgeDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiBadgeDirective],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\" ui-badge value=\"3\"></ui-icon>`,\n})"
                }
            ],
            "src/app/components/counter/counter.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiCounterComponent>",
                    "defaultValue": "(args: UiCounterComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiCounterComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-counter></ui-counter>`,\n})"
                }
            ],
            "src/app/components/icon/icon.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiIconComponent>",
                    "defaultValue": "(args: UiIconComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiIconComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\"></ui-icon> `,\n})"
                }
            ],
            "src/app/components/input/input.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiInputDirective>",
                    "defaultValue": "(args: UiInputDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiInputDirective],\n        imports: [CommonModule],\n    },\n    template: `<input uiInput [ngModel]=\"value\" placeholder=\"This is sparta!\"/>`,\n})"
                }
            ],
            "src/app/components/select/select.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiSelectPanelComponent>",
                    "defaultValue": "(args: UiSelectPanelComponent) => ({\n    props: args,\n    moduleMetadata: {\n        imports: [UiSelectModule],\n    },\n    template: `\n\t<ui-select label=\"Name\" placeholder=\"Select the option\">\n\t\t<ui-select-option value=\"option1\">Option 1</ui-select-option>\n\t\t<ui-select-option value=\"option2\">Option 2</ui-select-option>\n\t\t<ui-select-option value=\"option3\">Option 3</ui-select-option>\n\t</ui-select>\n`,\n})"
                }
            ],
            "src/app/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiToolbarComponent>",
                    "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-toolbar>Toolbar</ui-toolbar>`,\n})"
                },
                {
                    "name": "TemplateTransparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiToolbarComponent>",
                    "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule, UiButtonModule],\n    },\n    template: `<ui-toolbar background=\"transparent\"><button ui-button color=\"light\">Login</button></ui-toolbar>`,\n})"
                },
                {
                    "name": "TemplateWithLogo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiToolbarComponent>",
                    "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule, UiButtonModule],\n    },\n    template: `<ui-toolbar justify=\"between\"><img src=\"/assets/images/suggestions/icon-suggestions.svg\" alt=\"Logo image\"/>\n\t<button ui-button color=\"dark\">Login</button></ui-toolbar>`,\n})"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateTransparent.bind({})"
                },
                {
                    "name": "WithLogo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateWithLogo.bind({})"
                }
            ],
            "src/app/components/chips/stories/chip-list.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chips/stories/chip-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chips/stories/chip-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiChipListComponent>",
                    "defaultValue": "(args: UiChipListComponent) => ({\n    props: args,\n    template: `<ui-chip-list><ui-chip>One</ui-chip><ui-chip>Two</ui-chip></ui-chip-list>`,\n})"
                }
            ],
            "src/app/components/chips/stories/chip.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chips/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chips/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiChipComponent>",
                    "defaultValue": "(args: UiChipComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip>Chip</ui-chip>`,\n})"
                }
            ],
            "test-config.helper.ts": [
                {
                    "name": "configureTests",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: false,\n}"
                }
            ],
            "src/app/components/animations/fade.animation.ts": [
                {
                    "name": "fadeInOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/animations/fade.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('.3s ease-out', style({ opacity: 1 }))]),\n    transition(':leave', [animate('.3s ease-in', style({ opacity: 0 }))]),\n])"
                }
            ],
            "src/app/components/icon/ui-icon.component.ts": [
                {
                    "name": "ICONS_BASE_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/icon/ui-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/assets/images/icons'"
                }
            ],
            "src/app/components/toolbar/ui-toolbar.component.ts": [
                {
                    "name": "JUSTIFY_CSS_CLASES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/toolbar/ui-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n}"
                }
            ],
            "setup-jest.ts": [
                {
                    "name": "mock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "setup-jest.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
                }
            ],
            "src/app/modules/roadmap/roadmap.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/roadmap/roadmap.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    path: ':category',\n    component: RoadmapDetailComponent,\n    pathMatch: 'full'\n  }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/components/button/ui-button.directive.ts": [
                {
                    "name": "ButtonColors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"light\" | \"dark\" | \"error\" | \"default\"",
                    "file": "src/app/components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"long\" | \"default\"",
                    "file": "src/app/components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"submit\" | \"reset\"",
                    "file": "src/app/components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "test-config.helper.ts": [
                {
                    "name": "CompilerOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<literal type>",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "ConfigureFn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/components/toolbar/ui-toolbar.component.ts": [
                {
                    "name": "JusfityType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"start\" | \"end\" | \"center\" | \"between\" | \"around\"",
                    "file": "src/app/components/toolbar/ui-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./modules/home/home.module#HomeModule"
                    },
                    {
                        "path": "feedback",
                        "loadChildren": "./modules/feedback/feedback.module#FeedbackModule"
                    },
                    {
                        "path": "roadmap",
                        "loadChildren": "./modules/roadmap/roadmap.module#RoadmapModule"
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/modules/feedback/feedback.module.ts",
                "module": "FeedbackModule",
                "children": [
                    {
                        "path": "detail/:id",
                        "component": "FeedbackDetailComponent"
                    },
                    {
                        "path": "new",
                        "component": "FeedbackFormComponent"
                    },
                    {
                        "path": "edit/:id",
                        "component": "FeedbackFormComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/modules/home/home.module.ts",
                "module": "HomeModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "setup-jest.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/animations/fade.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeInOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/ui-badge.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiBadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/ui-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/chip-list/ui-chip-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiChipListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/chip/ui-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/stories/chip-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/stories/chip-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chips/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/counter/ui-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/divider/ui-divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiDividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-card/feedback-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardFooterDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardSideDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/ui-form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/ui-form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiFormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/ui-form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/ui-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/ui-icon.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICONS_BASE_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/ui-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/ui-select-option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiSelectOptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/ui-select-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiSelectPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/ui-select.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UiSelectService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTransparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateWithLogo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLogo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/ui-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/ui-toolbar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "JUSTIFY_CSS_CLASES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/comment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommentService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/feedback.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeedbackService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/reply.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReplyService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/comment.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Comment",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/feedback.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feedback",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/reply.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Reply",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/back-btn/back-btn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackBtnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment-form/comment-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommentFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CommentAvatarDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CommentIdDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CommentNameDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CommentRepliesDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/comment/comment.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CommentTextDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/form-card/form-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/reply/reply.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReplyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/layouts/feedback-detail/feedback-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/layouts/feedback-form/feedback-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/banner/banner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BannerSubtitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/banner/banner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BannerTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/category-filter/category-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyFeedbacksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "EmptyFeedbacksBodyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/empty-feedbacks/empty-feedbacks.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "EmptyFeedbacksTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/roadmap/roadmap-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoadmapItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/components/roadmap/roadmap.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoadmapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/layout/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/components/kanban-board/kanban-board.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KanbanBoardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
                "type": "component",
                "linktype": "component",
                "name": "KanbanCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "KanbanCardTextDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/components/kanban-card/kanban-card.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "KanbanCardTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/components/kanban-column/kanban-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KanbanColumnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/layouts/roadmap-detail/roadmap-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoadmapDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/roadmap/roadmap.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco-root.module.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslocoHttpLoader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test-config.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configureTests",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
